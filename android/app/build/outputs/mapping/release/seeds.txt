com.facebook.react.bridge.RuntimeExecutor
com.facebook.yoga.annotations.DoNotStrip
com.facebook.hermes.reactexecutor.HermesExecutor
com.google.android.material.datepicker.MaterialTextInputPicker
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.bridge.DynamicFromMap
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.react.bridge.JavaMethodWrapper$9
androidx.lifecycle.SavedStateHandleController
com.google.android.material.button.MaterialButtonToggleGroup
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.turbomodule.core.TurboModuleManager$1
com.facebook.react.bridge.WritableArray
com.facebook.react.bridge.JSBundleLoader$2
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder
com.facebook.react.modules.share.ShareModule
com.facebook.fbreact.specs.NativeClipboardSpec
com.facebook.react.bridge.Inspector$Page
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.bridge.JSIModuleType
com.swmansion.reanimated.MapUtils
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.swmansion.rnscreens.ScreenStackFragment
com.swmansion.reanimated.R$interpolator
com.facebook.react.bridge.ReactContext$1
com.facebook.react.modules.deviceinfo.DeviceInfoModule
androidx.appcompat.view.menu.ActionMenuItemView
com.facebook.react.animated.EventAnimationDriver
androidx.lifecycle.ProcessLifecycleInitializer
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.swmansion.reanimated.Utils
com.facebook.react.turbomodule.core.TurboModuleManager
com.google.android.material.internal.CheckableImageButton
com.facebook.jni.CppException
com.swmansion.reanimated.NodesManager$1
com.facebook.react.bridge.ReactSoftExceptionLogger
com.google.android.material.timepicker.ClockFaceView
com.oblador.vectoricons.VectorIconsModule
com.facebook.react.fabric.FabricUIManager
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.react.modules.blob.BlobModule
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.react.bridge.LifecycleEventListener
com.facebook.react.uimanager.ViewGroupManager
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.react.bridge.JSIModuleHolder
com.facebook.fbreact.specs.NativeModalManagerSpec
com.facebook.react.common.mapbuffer.WritableMapBuffer
androidx.appcompat.widget.FitWindowsLinearLayout
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager
androidx.fragment.app.DialogFragment
com.facebook.react.fabric.mounting.mountitems.MountItem
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.facebook.react.modules.intent.IntentModule
com.facebook.react.fabric.SurfaceHandlerBinding
com.facebook.react.bridge.JavaMethodWrapper$4
com.bumptech.glide.manager.SupportRequestManagerFragment
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.facebook.react.bridge.JSInstance
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.react.bridge.ReadableNativeMap
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.bridge.OnBatchCompleteListener
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.jni.annotations.DoNotStrip
com.facebook.react.bridge.JSBundleLoader$4
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.facebook.react.bridge.JavaScriptExecutor
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.facebook.react.fabric.CppComponentRegistry
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.bridge.NativeArgumentsParseException
androidx.lifecycle.SavedStateHandleAttacher
androidx.lifecycle.LegacySavedStateHandleController$1
com.facebook.react.devsupport.JSException
com.google.android.material.snackbar.SnackbarContentLayout
androidx.appcompat.widget.ViewStubCompat
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.fbreact.specs.NativeImageEditorSpec
com.swmansion.reanimated.R$bool
com.facebook.react.modules.dialog.DialogModule
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.react.views.text.ReactVirtualTextViewManager
com.google.android.material.timepicker.ChipTextInputComboView
com.facebook.react.bridge.BaseJavaModule
com.swmansion.reanimated.R$drawable
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
androidx.versionedparcelable.ParcelImpl
com.swmansion.reanimated.NodesManager$4
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.fbreact.specs.NativeRedBoxSpec
com.facebook.react.bridge.JSCJavaScriptExecutor
com.google.android.material.internal.NavigationMenuView
com.google.android.material.timepicker.TimePickerView
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.facebook.jni.DestructorThread$1
com.facebook.react.bridge.JSIModulePackage
com.facebook.react.bridge.JsonWriterHelper
com.swmansion.reanimated.NativeMethodsHelper
androidx.fragment.app.FragmentContainerView
com.google.android.material.bottomsheet.BottomSheetBehavior
com.swmansion.reanimated.R$color
com.bumptech.glide.load.ImageHeaderParser$ImageType
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.google.android.material.chip.Chip
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState
com.facebook.yoga.YogaLogLevel
com.google.android.material.textfield.TextInputEditText
com.facebook.react.bridge.DefaultJSExceptionHandler
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.facebook.react.bridge.UIManagerListener
com.swmansion.rnscreens.SearchBarManager
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor
com.google.android.material.search.SearchView$Behavior
com.bumptech.glide.GeneratedAppGlideModuleImpl
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.soloader.SysUtil$LollipopSysdeps
com.JetSetGoo.MainApplication
com.facebook.react.bridge.Arguments
com.facebook.fbreact.specs.NativeToastAndroidSpec
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.react.views.modal.ReactModalHostManager
com.swmansion.reanimated.nativeProxy.SensorSetter
com.swmansion.reanimated.R$dimen
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.bridge.JSBundleLoader$1
com.facebook.react.bridge.JSApplicationCausedNativeException
com.swmansion.reanimated.NodesManager$2
androidx.lifecycle.FullLifecycleObserverAdapter
com.facebook.react.bridge.JavaJSExecutor$Factory
com.facebook.react.bridge.CatalystInstanceImpl$1$1
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback
com.facebook.react.bridge.JSBundleLoader$5
androidx.recyclerview.widget.RecyclerView
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
com.facebook.react.bridge.JavaMethodWrapper$2
javax.inject.Provider
com.facebook.react.bridge.ReadableNativeMap$1
com.facebook.react.bridge.PerformanceCounter
com.facebook.jni.ThreadScopeSupport
com.swmansion.reanimated.layoutReanimation.SharedElement
androidx.activity.ComponentActivity$5
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.swmansion.reanimated.CopiedEvent
androidx.appcompat.widget.DialogTitle
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
androidx.constraintlayout.widget.ConstraintLayout
com.bumptech.glide.integration.okhttp3.OkHttpGlideModule
com.facebook.jni.DestructorThread$Terminus
com.swmansion.reanimated.CopiedEvent$1
com.facebook.react.bridge.ModuleSpec
com.facebook.react.bridge.JSIModuleRegistry
com.facebook.react.animated.NativeAnimatedModule
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.react.bridge.ReactMarker
androidx.appcompat.widget.ActionMenuView
com.facebook.react.bridge.interop.InteropModuleRegistry
com.facebook.react.modules.camera.ImageStoreManager
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.bridge.ContextBaseJavaModule
com.rnfs.RNFSManager
androidx.coordinatorlayout.widget.CoordinatorLayout
com.facebook.react.views.view.ReactClippingViewManager
com.swmansion.reanimated.ReanimatedMessageQueueThread
com.facebook.react.modules.devloading.DevLoadingModule
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.facebook.react.uimanager.events.RCTEventEmitter
androidx.fragment.app.Fragment$5
com.facebook.react.bridge.ReactCxxErrorHandler
com.swmansion.reanimated.NativeProxy$1
com.facebook.react.bridge.JavaMethodWrapper$6
com.facebook.react.bridge.CallbackImpl
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.react.bridge.ReactBridge
androidx.activity.result.ActivityResultRegistry$1
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation
com.google.android.material.sidesheet.SideSheetBehavior
com.facebook.react.bridge.NativeArray
com.facebook.react.modules.websocket.WebSocketModule
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.bridge.WritableNativeArray
com.facebook.react.modules.clipboard.ClipboardModule
androidx.lifecycle.SingleGeneratedAdapterObserver
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.jni.NativeRunnable
com.facebook.react.bridge.JavaScriptExecutorFactory
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
android.support.v4.graphics.drawable.IconCompatParcelizer
com.swmansion.reanimated.BuildConfig
com.facebook.react.bridge.ModuleHolder
com.facebook.react.bridge.ReadableNativeMap$2
com.facebook.react.devsupport.HMRClient
com.swmansion.reanimated.R$styleable
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types
com.facebook.react.bridge.DynamicFromObject
com.facebook.soloader.DoNotOptimize
com.facebook.react.bridge.Callback
com.swmansion.reanimated.AndroidUIScheduler
com.facebook.jni.HybridClassBase
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
com.google.android.material.internal.BaselineLayout
com.facebook.react.modules.core.DeviceEventManagerModule
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter
com.google.android.material.transformation.FabTransformationBehavior
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.react.bridge.JavaOnlyMap
com.facebook.react.modules.blob.FileReaderModule
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.facebook.react.bridge.JavaScriptModule
com.facebook.yoga.YogaNative
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.swmansion.reanimated.R$layout
com.dylanvann.fastimage.FastImageViewModule
com.facebook.react.bridge.RuntimeScheduler
com.facebook.react.modules.sound.SoundManagerModule
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.dylanvann.fastimage.FastImageViewManager
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.defaults.DefaultComponentsRegistry
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.swmansion.reanimated.nativeProxy.NoopEventHandler
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.swmansion.reanimated.sensor.ReanimatedSensorContainer
com.facebook.react.uimanager.ReanimatedUIManager
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.bridge.NativeModule
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
com.facebook.react.bridge.CatalystInstanceImpl$3
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.react.modules.toast.ToastModule
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory
com.facebook.react.bridge.JavaModuleWrapper
com.swmansion.reanimated.NodesManager$OnAnimationFrame
androidx.activity.ComponentActivity$3
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule
com.facebook.react.bridge.ReadableMap
androidx.emoji2.text.EmojiCompatInitializer
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.react.views.text.ReactTextViewManager
com.swmansion.reanimated.nativeProxy.NativeProxyCommon
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.hermes.intl.Collator
com.swmansion.reanimated.ReaCompatibility
com.facebook.react.modules.core.JSTimers
com.swmansion.reanimated.NodesManager$NativeUpdateOperation
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager
com.facebook.jni.UnknownCppException
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.react.fabric.ReactNativeConfig
com.facebook.react.modules.debug.DevSettingsModule
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.bridge.BackgroundExecutor
com.swmansion.reanimated.R$xml
com.facebook.yoga.YogaLogger
com.facebook.react.bridge.JavaMethodWrapper
com.bumptech.glide.GeneratedAppGlideModule
androidx.core.graphics.drawable.IconCompat
com.facebook.react.bridge.ReadableNativeArray$1
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.bridge.JSIModule
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.swmansion.gesturehandler.react.RNGestureHandlerModule
com.facebook.react.modules.vibration.VibrationModule
com.swmansion.reanimated.ReanimatedUIManagerFactory
com.facebook.react.uimanager.BaseViewManager
com.swmansion.reanimated.NodesManager
com.facebook.jni.HybridData
com.facebook.jni.IteratorHelper
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
com.swmansion.reanimated.R$animator
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.swmansion.reanimated.ReactNativeUtils
androidx.appcompat.widget.AlertDialogLayout
com.google.android.material.appbar.AppBarLayout$Behavior
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.facebook.jni.DestructorThread$DestructorStack
androidx.recyclerview.widget.GridLayoutManager
com.facebook.common.internal.DoNotStrip
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.react.bridge.ReactModuleWithSpec
com.facebook.react.bridge.ReactApplicationContext
com.facebook.proguard.annotations.DoNotStrip
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.facebook.react.jscexecutor.JSCExecutor
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.google.android.material.internal.NavigationMenuItemView
androidx.activity.ImmLeaksCleaner
com.facebook.jni.CppSystemErrorException
com.facebook.react.bridge.CatalystInstanceImpl$4
kotlin.internal.jdk7.JDK7PlatformImplementations
com.swmansion.reanimated.R
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.facebook.react.bridge.Arguments$1
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.react.fabric.interop.InteropEventEmitter
com.swmansion.reanimated.AndroidUIScheduler$2
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.react.bridge.JavaScriptContextHolder
com.facebook.react.config.ReactFeatureFlags
com.reactnativecommunity.blurview.BlurViewManager
com.facebook.react.bridge.JSONArguments
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.react.bridge.Dynamic
androidx.startup.InitializationProvider
com.facebook.react.bridge.UIManager
com.facebook.fbreact.specs.NativeVibrationSpec
com.facebook.jni.DestructorThread$DestructorList
com.swmansion.rnscreens.ScreenStackViewManager
com.facebook.react.bridge.JavaMethodWrapper$10
com.facebook.soloader.SoLoader
androidx.core.app.CoreComponentFactory
androidx.emoji2.text.EmojiCompatInitializer$1
com.facebook.react.views.switchview.ReactSwitchManager
androidx.core.widget.NestedScrollView
com.swmansion.reanimated.nativeProxy.EventHandler
com.facebook.yoga.YogaValue
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.swmansion.reanimated.sensor.ReanimatedSensorListener
androidx.core.app.RemoteActionCompat
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.bridge.ColorPropConverter
com.google.android.material.appbar.MaterialToolbar
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.bridge.queue.MessageQueueThreadHandler
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.facebook.react.modules.appearance.AppearanceModule
com.facebook.react.common.LifecycleState
com.facebook.react.bridge.Arguments$2
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.facebook.react.bridge.GuardedResultAsyncTask
com.facebook.react.bridge.DynamicFromMap$1
kotlinx.coroutines.android.AndroidDispatcherFactory
com.facebook.react.bridge.SoftAssertions
com.facebook.react.turbomodule.core.TurboModuleManager$2
com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.google.android.material.textfield.TextInputLayout
com.facebook.react.bridge.ReadableType
com.swmansion.reanimated.sensor.ReanimatedSensorType
androidx.transition.FragmentTransitionSupport
com.swmansion.reanimated.R$string
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.bridge.ReactMethod
com.RNFetchBlob.RNFetchBlob
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.swmansion.reanimated.R$id
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback
com.facebook.fbreact.specs.NativeBlobModuleSpec
androidx.appcompat.widget.ActionBarContainer
com.facebook.react.bridge.MemoryPressureListener
androidx.appcompat.view.menu.ListMenuItemView
com.facebook.react.modules.core.TimingModule
com.facebook.react.bridge.DynamicFromArray
androidx.appcompat.widget.ActionBarContextView
com.google.android.material.datepicker.MaterialDatePicker
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.modules.core.ExceptionsManagerModule
androidx.appcompat.widget.ContentFrameLayout
com.facebook.react.bridge.JSIModuleProvider
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.swmansion.reanimated.ReanimatedModule$1
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.swmansion.reanimated.layoutReanimation.AnimationsManager
com.facebook.jni.MapIteratorHelper
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.th3rdwave.safeareacontext.SafeAreaProviderManager
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
com.lugg.RNCConfig.RNCConfigModule
com.facebook.react.bridge.CatalystInstance
com.facebook.react.bridge.CatalystInstanceImpl$5
com.facebook.fbreact.specs.NativeAppearanceSpec
com.swmansion.reanimated.R$style
com.facebook.react.bridge.JSExceptionHandler
com.swmansion.reanimated.R$anim
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.views.text.ReactRawTextManager
com.google.android.material.datepicker.MaterialCalendarGridView
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.google.android.material.transformation.ExpandableTransformationBehavior
com.facebook.react.bridge.NativeMap
com.facebook.hermes.intl.DateTimeFormat
com.facebook.react.bridge.NativeModuleRegistry
androidx.core.util.Pools$SimplePool
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.react.bridge.MemoryPressure
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.facebook.react.uimanager.ComponentNameResolverManager
com.facebook.hermes.intl.NumberFormat
androidx.lifecycle.Lifecycling$1
com.facebook.react.modules.appstate.AppStateModule
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.react.bridge.ReactMarker$MarkerListener
com.swmansion.reanimated.R$integer
com.facebook.react.fabric.ComponentFactory
com.facebook.react.bridge.ReactIgnorableMountingException
com.facebook.react.bridge.UiThreadUtil
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.bridge.ReactContext
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.uimanager.ViewManager
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.google.android.material.carousel.CarouselLayoutManager
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.facebook.react.bridge.ReadableNativeArray
com.facebook.systrace.TraceListener
com.facebook.soloader.SysUtil$Api14Utils
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.react.modules.appregistry.AppRegistry
androidx.recyclerview.widget.LinearLayoutManager
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener
com.facebook.jni.DestructorThread
com.facebook.react.bridge.AssertionException
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
androidx.constraintlayout.helper.widget.Flow
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.facebook.react.uimanager.SimpleViewManager
com.facebook.react.bridge.ActivityEventListener
com.swmansion.reanimated.ReanimatedPackage
com.facebook.react.fabric.StateWrapperImpl
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.facebook.react.views.view.ReactViewManager
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.module.model.ReactModuleInfo
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.google.android.material.behavior.SwipeDismissBehavior
com.dylanvann.fastimage.FastImageGlideModule
com.facebook.react.bridge.Promise
androidx.core.graphics.drawable.IconCompatParcelizer
com.swmansion.reanimated.ReanimatedPackage$1
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager
com.facebook.react.uimanager.RootViewManager
com.facebook.react.bridge.NativeModule$NativeMethod
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.facebook.react.bridge.ReadableNativeMap$1$1
com.facebook.yoga.YogaNodeJNIBase
androidx.appcompat.widget.ActionBarOverlayLayout
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
androidx.constraintlayout.widget.Barrier
androidx.appcompat.widget.Toolbar
com.facebook.react.fabric.events.EventBeatManager
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.facebook.react.common.JavascriptException
androidx.fragment.app.FragmentManager$6
androidx.annotation.Keep
com.swmansion.reanimated.layoutReanimation.Snapshot
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.bridge.ReactContext$2
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.react.modules.blob.BlobCollector
com.google.android.material.timepicker.ClockHandView
com.facebook.hermes.intl.Intl
com.facebook.fbreact.specs.NativeShareModuleSpec
androidx.core.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.ReactMarkerConstants
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.react.devsupport.LogBoxModule
com.facebook.react.devsupport.JSCHeapCapture
com.swmansion.reanimated.sensor.ReanimatedSensor
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.google.android.material.transformation.FabTransformationScrimBehavior
com.facebook.react.modules.fabric.ReactFabric
com.swmansion.reanimated.NativeProxy
com.facebook.react.uimanager.UIManagerModule
com.facebook.react.bridge.GuardedRunnable
com.facebook.react.bridge.Inspector
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.swmansion.rnscreens.ScreenFragment
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.react.fabric.Binding
com.google.android.material.button.MaterialButton
kotlin.internal.jdk8.JDK8PlatformImplementations
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.react.bridge.JavaMethodWrapper$1
com.swmansion.reanimated.ReanimatedModule
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.google.android.material.datepicker.MaterialCalendar
com.facebook.soloader.Api18TraceUtils
com.facebook.react.bridge.JSBundleLoader
com.JetSetGoo.MainActivity
com.facebook.hermes.instrumentation.HermesSamplingProfiler
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.util.RCTLog
com.swmansion.reanimated.R$attr
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
androidx.appcompat.widget.ButtonBarLayout
com.facebook.jni.HybridData$Destructor
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.facebook.react.views.image.ReactImageManager
com.facebook.react.modules.debug.SourceCodeModule
com.swmansion.reanimated.AndroidUIScheduler$1
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.airbnb.android.react.lottie.LottieAnimationViewManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.facebook.react.bridge.InvalidIteratorException
com.google.android.material.internal.ClippableRoundedCornerLayout
com.facebook.proguard.annotations.KeepGettersAndSetters
com.swmansion.rnscreens.ScreenViewManager
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.fbreact.specs.NativeTimingSpec
com.facebook.react.bridge.PromiseImpl
com.facebook.react.bridge.ReadableMapKeySetIterator
com.RNFetchBlob.Utils.FileProvider
androidx.savedstate.Recreator
com.swmansion.reanimated.NodesManager$3
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.react.bridge.NativeArrayInterface
com.google.android.material.internal.TouchObserverFrameLayout
com.facebook.react.bridge.CxxModuleWrapper
androidx.appcompat.widget.SearchView
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.react.bridge.Systrace
com.facebook.react.bridge.NoSuchKeyException
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.facebook.react.bridge.WritableMap
com.facebook.react.bridge.JavaOnlyArray$1
com.facebook.react.bridge.CatalystInstanceImpl$2
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.modules.statusbar.StatusBarModule
com.google.android.material.theme.MaterialComponentsViewInflater
com.facebook.react.bridge.ReadableArray
com.facebook.react.fabric.CoreComponentsRegistry
androidx.activity.ComponentActivity$4
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec
com.facebook.react.bridge.ReactCallback
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.modules.permissions.PermissionsModule
com.facebook.react.modules.image.ImageLoaderModule
com.facebook.react.bridge.JavaOnlyMap$1
com.facebook.react.bridge.DimensionPropConverter
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.react.bridge.JavaJSExecutor
com.google.android.material.transformation.ExpandableBehavior
com.swmansion.reanimated.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.swmansion.reanimated.R$drawable: int abc_seekbar_track_material
com.swmansion.reanimated.R$styleable: int[] FragmentContainerView
com.rnfs.RNFSManager: java.lang.String RNFSExternalCachesDirectoryPath
com.swmansion.reanimated.R$styleable: int AppCompatImageView_android_src
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_failureImage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.swmansion.reanimated.R$string: int state_expanded_description
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_progressBarAutoRotateInterval
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.swmansion.reanimated.R$styleable: int Toolbar_titleMargins
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_END
com.swmansion.reanimated.R$attr: int toolbarStyle
com.swmansion.reanimated.R$styleable: int View_android_theme
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean mShouldAnimateLayout
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_visible
com.swmansion.reanimated.R$attr: int retryImageScaleType
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowDx
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSnapshotRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.swmansion.reanimated.R$dimen: int abc_progress_bar_height_material
com.swmansion.reanimated.R$drawable: int abc_btn_colored_material
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dark
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ROTATION_VECTOR
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_progressBarImage
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.swmansion.reanimated.R$attr: int actualImageResource
com.swmansion.reanimated.R$attr: int buttonBarPositiveButtonStyle
com.swmansion.reanimated.R$attr: int actualImageUri
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Body2
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_dividerPadding
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_RatingBar
com.swmansion.reanimated.R$drawable: int notification_template_icon_low_bg
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String NAME
com.swmansion.reanimated.R$attr: int fontProviderFetchStrategy
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext reactContext
com.swmansion.reanimated.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.swmansion.reanimated.R$styleable: int SearchView_voiceIcon
com.swmansion.reanimated.R$id: int tag_accessibility_heading
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_TabBar
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Subhead
com.swmansion.reanimated.R$attr: int failureImageScaleType
com.swmansion.reanimated.R$styleable: int[] Autofill_InlineSuggestion
com.swmansion.reanimated.R$string: int abc_menu_alt_shortcut_label
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map val$reactModuleInfoMap
com.swmansion.reanimated.R$attr: int divider
com.swmansion.reanimated.R$id: int accessibility_links
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$animator: int fragment_open_enter
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.swmansion.reanimated.R$attr: int displayOptions
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.swmansion.reanimated.R$attr: int iconTint
com.swmansion.reanimated.R$styleable: int[] CheckedTextView
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_X
com.swmansion.reanimated.R$id: int search_plate
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.swmansion.reanimated.R$attr: int layout
com.swmansion.reanimated.R$styleable: int SearchView_closeIcon
com.swmansion.reanimated.R$attr: int actionBarDivider
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
com.swmansion.reanimated.R$styleable: int SearchView_queryBackground
com.swmansion.reanimated.BuildConfig: int REACT_NATIVE_MINOR_VERSION
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.swmansion.reanimated.R$id: int customPanel
com.swmansion.reanimated.R$style: int Theme_FullScreenDialog
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopStart
com.swmansion.reanimated.R$style: int DialogAnimationFade
com.swmansion.reanimated.R$attr: int homeAsUpIndicator
com.swmansion.reanimated.R$id: int alertTitle
com.swmansion.reanimated.R$color: int abc_search_url_text_pressed
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionStartIconStyle
com.swmansion.reanimated.R$id: int rn_redbox_stack
com.swmansion.reanimated.R$attr: int autoSizeMaxTextSize
com.swmansion.reanimated.R$attr: int gapBetweenBars
com.swmansion.reanimated.R$drawable: int notification_template_icon_bg
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.swmansion.reanimated.R$attr: int tooltipFrameBackground
com.swmansion.reanimated.R$attr: int itemPadding
com.swmansion.reanimated.R$dimen: int abc_action_bar_content_inset_with_nav
com.swmansion.reanimated.R$attr: int indeterminateProgressStyle
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.String mName
com.swmansion.reanimated.R$id: int accessibility_state
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.reactnativecommunity.blurview.BlurViewManager: com.facebook.react.bridge.ReactApplicationContext mCallerContext
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.swmansion.reanimated.R$attr: int color
com.swmansion.reanimated.R$string: int catalyst_debug_error
com.swmansion.reanimated.R$dimen: int notification_action_icon_size
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeBackground
com.swmansion.reanimated.R$style: int Widget_Compat_NotificationActionText
com.swmansion.reanimated.R$color: int error_color_material_dark
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_isAutofillInlineSuggestionTheme
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_END
com.swmansion.reanimated.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.swmansion.reanimated.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$string: int abc_menu_enter_shortcut_label
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int tag_accessibility_clickable_spans
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.swmansion.reanimated.R$drawable: int abc_edit_text_material
com.swmansion.reanimated.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.swmansion.reanimated.R$style: int Platform_V21_AppCompat_Light
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.swmansion.reanimated.R$style: int redboxButton
com.swmansion.reanimated.R$attr: int showText
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String NAME
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.R$styleable: int GradientColor_android_tileMode
com.swmansion.reanimated.R$style: int Base_Animation_AppCompat_Tooltip
com.swmansion.reanimated.R$attr: int tooltipForegroundColor
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.swmansion.reanimated.R$id: int src_in
com.swmansion.reanimated.R$styleable: int[] AnimatedStateListDrawableCompat
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.swmansion.reanimated.R$style: int Base_AlertDialog_AppCompat
com.swmansion.reanimated.R$styleable: int AppCompatTextView_textLocale
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mModuleHolders
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.swmansion.reanimated.R$attr: int listPreferredItemHeightSmall
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeTextType
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_start_icon
com.swmansion.reanimated.R$color: int abc_search_url_text
com.swmansion.reanimated.R$dimen: int abc_edit_text_inset_top_material
com.swmansion.reanimated.R$dimen: int tooltip_horizontal_padding
com.swmansion.reanimated.R$attr: int actionModePopupWindowStyle
com.swmansion.reanimated.R$attr: int textColorAlertDialogListItem
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_START
com.swmansion.reanimated.R$style: int Theme_AppCompat_Dialog
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
com.swmansion.reanimated.R$styleable: int SwitchCompat_track
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_X
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean sIsSoLibraryLoaded
com.facebook.react.fabric.interop.InteropEventEmitter: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcherOverride
com.swmansion.reanimated.R$styleable: int[] GradientColorItem
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.swmansion.reanimated.R$styleable: int CompoundButton_buttonTint
com.swmansion.reanimated.R$attr: int listDividerAlertDialog
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
com.swmansion.reanimated.R$styleable: int SearchView_iconifiedByDefault
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.swmansion.reanimated.R$attr: int expandActivityOverflowButtonDrawable
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.swmansion.reanimated.R$styleable: int Toolbar_buttonGravity
com.swmansion.reanimated.R$layout: int abc_action_bar_title_item
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.swmansion.reanimated.R$id: int ghost_view
com.swmansion.reanimated.R$styleable: int MenuItem_android_numericShortcut
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.swmansion.reanimated.R$drawable: int notification_action_background
com.swmansion.reanimated.R$styleable: int ActionBar_icon
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.swmansion.reanimated.R$styleable: int ActionBar_titleTextStyle
com.RNFetchBlob.RNFetchBlob: android.util.SparseArray promiseTable
com.swmansion.reanimated.R$color: int primary_text_disabled_material_dark
com.google.android.material.search.SearchBar$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.swmansion.reanimated.R$styleable: int[] ActionMenuView
com.swmansion.reanimated.R$styleable: int Toolbar_titleMargin
com.swmansion.reanimated.R$attr: int listLayout
com.swmansion.reanimated.R$attr: int drawerArrowStyle
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.events.RCTEventEmitter mCustomEventHandler
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.swmansion.reanimated.R$string: int abc_activity_chooser_view_see_all
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.reanimated.R$attr: int customNavigationLayout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$id: int accessibility_state_expanded
com.swmansion.reanimated.R$attr: int ratingBarStyleSmall
com.swmansion.reanimated.R$id: int rn_frame_file
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.Long firstUptime
com.swmansion.reanimated.R$attr: int titleMargins
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.swmansion.reanimated.R$attr: int multiChoiceItemLayout
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.R$styleable: int SearchView_animateNavigationIcon
com.swmansion.reanimated.R$style: int Platform_AppCompat_Light
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
com.swmansion.reanimated.R$styleable: int AppCompatTheme_editTextColor
com.swmansion.reanimated.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.swmansion.reanimated.R$style: int Base_V28_Theme_AppCompat
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
com.swmansion.reanimated.R$color: int primary_material_light
com.swmansion.reanimated.R$dimen: int abc_switch_padding
com.swmansion.reanimated.R$attr: int subtitle
com.swmansion.reanimated.R$drawable: int abc_vector_test
com.facebook.react.animated.EventAnimationDriver: int mViewTag
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.swmansion.reanimated.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.swmansion.reanimated.R$color: int background_floating_material_light
com.swmansion.reanimated.R$attr: int roundBottomEnd
com.swmansion.reanimated.AndroidUIScheduler$2: com.swmansion.reanimated.AndroidUIScheduler this$0
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight
com.swmansion.reanimated.R$dimen: int abc_dropdownitem_icon_width
com.swmansion.reanimated.R$styleable: int MenuItem_alphabeticModifiers
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int SearchView_android_text
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundedCornerRadius
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionChip
com.swmansion.reanimated.R$attr: int navigationIcon
com.swmansion.reanimated.R$id: int italic
com.swmansion.reanimated.R$id: int radio
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.swmansion.reanimated.R$anim: int abc_shrink_fade_out_from_bottom
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.swmansion.reanimated.R$styleable: int SwitchCompat_android_thumb
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.swmansion.reanimated.R$style: int Platform_V25_AppCompat
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.swmansion.reanimated.R$dimen: int abc_disabled_alpha_material_dark
com.swmansion.reanimated.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$id: int action_bar_title
com.swmansion.reanimated.R$string: int abc_searchview_description_query
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.swmansion.reanimated.R$drawable: int abc_list_pressed_holo_dark
com.swmansion.reanimated.R$attr: int subMenuArrow
com.swmansion.reanimated.layoutReanimation.Snapshot: float[] identityMatrix
com.swmansion.reanimated.R$xml: int rn_dev_preferences
com.swmansion.reanimated.R$dimen: int disabled_alpha_material_light
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.swmansion.reanimated.R$drawable: int btn_radio_off_to_on_mtrl_animation
com.swmansion.reanimated.R$attr: int roundingBorderPadding
com.swmansion.reanimated.R$styleable: int SearchView_submitBackground
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.swmansion.reanimated.R$styleable: int MenuView_android_headerBackground
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowRadius
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_retryImageScaleType
com.swmansion.reanimated.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_VERTICAL
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
com.swmansion.reanimated.R$anim: int abc_grow_fade_in_from_bottom
com.swmansion.reanimated.layoutReanimation.Snapshot: int originX
com.swmansion.reanimated.R$style: int Widget_Compat_NotificationActionContainer
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderCerts
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.swmansion.reanimated.R$attr: int selectableItemBackgroundBorderless
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.swmansion.reanimated.R$styleable: int Spinner_popupTheme
com.swmansion.reanimated.R$styleable: int Toolbar_logoDescription
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_STOP
com.swmansion.reanimated.R$drawable: int notify_panel_notification_icon_bg
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Body2
com.swmansion.reanimated.R$style: int Theme_AppCompat_Empty
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.swmansion.reanimated.R$id: int view_tag_native_id
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomEnd
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String NAME
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Menu
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String NAME
com.swmansion.reanimated.R$style: int Base_V22_Theme_AppCompat
com.swmansion.reanimated.R$style: int Widget_AppCompat_ImageButton
com.swmansion.reanimated.R$string: int catalyst_hot_reloading_stop
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.swmansion.reanimated.R$attr: int icon
com.swmansion.reanimated.R$color: int material_grey_100
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderFetchStrategy
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_BOTTOM
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Switch
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.swmansion.reanimated.R$id: int multiply
com.swmansion.reanimated.R$string: int catalyst_devtools_open
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.swmansion.reanimated.R$id: int search_button
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_START
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutCreateAnimation
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dividerHorizontal
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DURATION_MS
com.airbnb.lottie.LottieAnimationView$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_star_half_black_48dp
com.swmansion.reanimated.R$string: int catalyst_report_button
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.swmansion.reanimated.R$attr: int background
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_END
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$attr: int tickMarkTint
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.swmansion.reanimated.R$id: int accessibility_custom_action_13
com.swmansion.reanimated.R$styleable: int SearchView_layout
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.swmansion.reanimated.R$layout: int notification_template_custom_big
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.swmansion.reanimated.R$attr: int editTextColor
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] orientation
com.swmansion.reanimated.R$attr: int backgroundImage
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
com.swmansion.reanimated.R$styleable: int PopupWindow_android_popupBackground
com.swmansion.reanimated.R$dimen: int autofill_inline_suggestion_icon_size
com.swmansion.reanimated.R$attr: int fontStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
com.swmansion.reanimated.R$drawable: int abc_list_divider_mtrl_alpha
com.swmansion.reanimated.R$styleable: int MenuItem_contentDescription
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.swmansion.reanimated.R$dimen: int tooltip_y_offset_touch
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_NUMBER_OF_TAPS
com.swmansion.reanimated.R$style: int Widget_AppCompat_EditText
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_Y
com.swmansion.reanimated.R$styleable: int AppCompatTheme_controlBackground
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_END
com.swmansion.reanimated.R$attr: int fontProviderPackage
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingEnd
com.swmansion.reanimated.R$styleable: int[] Fragment
com.swmansion.reanimated.R$color: int highlighted_text_material_dark
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.facebook.react.config.ReactFeatureFlags: boolean reduceDeleteCreateMutationLayoutAnimation
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.swmansion.reanimated.R$drawable: int abc_text_select_handle_middle_mtrl
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int ButtonBarLayout_allowStacking
com.swmansion.reanimated.R$dimen: int notification_large_icon_height
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarStyle
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean mInitialized
com.swmansion.reanimated.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display4
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.rnfs.RNFSManager: java.lang.String RNFSTemporaryDirectoryPath
com.swmansion.reanimated.R$attr: int actionModeCloseButtonStyle
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopEnd
com.swmansion.reanimated.R$drawable: int abc_list_selector_holo_light
com.swmansion.reanimated.R$id: int accessibility_label
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_drawableSize
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableTint
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.swmansion.reanimated.R$styleable: int AppCompatTheme_panelMenuListWidth
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.swmansion.reanimated.R$anim: int catalyst_fade_in
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.swmansion.reanimated.R$drawable: int abc_ic_ab_back_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.swmansion.reanimated.R$string: int abc_capital_on
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double interval
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.swmansion.reanimated.R$string: int link_description
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.swmansion.reanimated.nativeProxy.SensorSetter: com.facebook.jni.HybridData mHybridData
com.rnfs.RNFSManager: java.lang.String RNFSDocumentDirectory
com.swmansion.reanimated.R$style: int Widget_AppCompat_DrawerArrowToggle
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.swmansion.reanimated.R$id: int accessibility_custom_action_2
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.util.HashMap sensors
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.swmansion.reanimated.R$string: int combobox_description
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.swmansion.reanimated.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$layout: int abc_screen_simple
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.swmansion.reanimated.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
com.swmansion.reanimated.R$attr: int fadeDuration
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsDoneCreatingModule
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionButtonStyle
com.swmansion.reanimated.R$dimen: int tooltip_precise_anchor_extra_offset
com.swmansion.reanimated.R$styleable: int AppCompatTheme_popupMenuStyle
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
com.swmansion.reanimated.R$styleable: int ViewBackgroundHelper_backgroundTint
com.swmansion.reanimated.R$attr: int showAsAction
com.swmansion.reanimated.R$anim: int fragment_fast_out_extra_slow_in
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$attr: int colorControlHighlight
com.swmansion.reanimated.R$id: int shortcut
com.swmansion.reanimated.R$attr: int thumbTint
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_retryImage
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundedCornerRadius
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.swmansion.reanimated.R$layout: int abc_screen_content_include
com.swmansion.reanimated.R$styleable: int MenuItem_android_onClick
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.swmansion.reanimated.R$attr: int ratingBarStyleIndicator
com.swmansion.reanimated.R$attr: int searchViewStyle
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$id: int accessibility_custom_action_26
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableTopCompat
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.facebook.react.bridge.WritableMap mNativeProps
com.swmansion.reanimated.R$styleable: int SearchView_searchPrefixText
com.swmansion.reanimated.R$styleable: int[] ViewStubCompat
com.swmansion.reanimated.R$attr: int textAllCaps
com.swmansion.reanimated.R$color: int abc_primary_text_material_dark
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: int mViewTag
com.swmansion.reanimated.R$id: int notification_main_column_container
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.swmansion.reanimated.R$color: int abc_tint_switch_track
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceListItem
com.swmansion.reanimated.R$attr: int listPreferredItemHeightLarge
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.swmansion.reanimated.R$color: int material_grey_850
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTheme
com.swmansion.reanimated.R$styleable: int ActionBar_popupTheme
com.swmansion.reanimated.R$dimen: int notification_small_icon_background_padding
com.swmansion.reanimated.R$id: int action_image
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mReattachedViews
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.swmansion.reanimated.R$dimen: int abc_alert_dialog_button_bar_height
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap toBeRemoved
com.swmansion.reanimated.R$id: int view_tree_saved_state_registry_owner
com.swmansion.reanimated.R$attr: int actionModeShareDrawable
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
com.swmansion.reanimated.R$id: int textSpacerNoButtons
com.swmansion.reanimated.R$styleable: int CheckedTextView_checkMarkTint
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.swmansion.reanimated.R$styleable: int AppCompatTheme_searchViewStyle
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.swmansion.reanimated.R$attr: int voiceIcon
com.swmansion.reanimated.NodesManager$3: boolean val$trySynchronously
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowActionBar
com.swmansion.reanimated.R$string: int catalyst_hot_reloading_auto_disable
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.swmansion.reanimated.R$styleable: int MenuItem_actionViewClass
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.swmansion.reanimated.R$dimen: int abc_action_bar_stacked_tab_max_width
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
com.swmansion.reanimated.R$style: int Widget_AppCompat_SeekBar_Discrete
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionEndIconStyle
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_width_major
com.swmansion.reanimated.R$attr: int contentInsetEndWithActions
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.LinkedBlockingQueue fsTaskQueue
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mDisableCleaningForViewTag
com.swmansion.reanimated.R$id: int accessibility_custom_action_27
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GRAVITY
com.swmansion.reanimated.R$integer: int react_native_dev_server_port
com.swmansion.reanimated.R$id: int title
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_overlayImage
com.swmansion.reanimated.R$id: int tag_accessibility_actions
com.swmansion.reanimated.R$dimen: int hint_alpha_material_light
com.swmansion.reanimated.R$styleable: int ActionMode_titleTextStyle
com.swmansion.reanimated.R$styleable: int FontFamilyFont_fontWeight
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.swmansion.reanimated.R$attr: int alpha
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display1
com.swmansion.reanimated.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.swmansion.reanimated.R$dimen: int abc_star_big
com.swmansion.reanimated.R$styleable: int AppCompatTheme_seekBarStyle
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetEnd
com.swmansion.reanimated.R$id: int accessibility_custom_action_25
com.swmansion.reanimated.R$color: int material_blue_grey_900
com.swmansion.reanimated.R$styleable: int MenuView_android_horizontalDivider
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_Y
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_HASH
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Title
com.swmansion.reanimated.R$id: int accessibility_collection
com.swmansion.reanimated.R$attr: int textAppearanceListItem
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
com.swmansion.reanimated.R$attr: int textLocale
com.swmansion.reanimated.R$string: int state_mixed_description
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display3
com.swmansion.reanimated.R$dimen: int abc_list_item_height_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.swmansion.reanimated.R$style: int Base_V7_Widget_AppCompat_EditText
com.swmansion.reanimated.R$drawable: int abc_switch_thumb_material
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.swmansion.reanimated.R$layout: int redbox_item_frame
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureSoftExceptions
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_MANUAL_ACTIVATION
com.swmansion.reanimated.R$id: int visible_removing_fragment_view_tag
com.swmansion.reanimated.R$id: int accessibility_custom_action_21
com.swmansion.reanimated.R$dimen: int abc_text_size_display_4_material
com.swmansion.reanimated.R$attr: int state_above_anchor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.swmansion.reanimated.R$id: int notification_main_column
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.swmansion.reanimated.R$id: int on
com.swmansion.reanimated.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
com.swmansion.reanimated.R$styleable: int AppCompatTheme_imageButtonStyle
com.swmansion.reanimated.R$attr: int seekBarStyle
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.swmansion.reanimated.R$id: int accessibility_custom_action_29
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.swmansion.reanimated.R$anim: int abc_slide_out_bottom
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean slowAnimationsEnabled
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_Solid
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String WIDTH
com.swmansion.reanimated.R$styleable: int SwitchCompat_android_textOff
com.swmansion.reanimated.R$integer: int abc_config_activityShortDur
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.swmansion.reanimated.R$attr: int actionBarStyle
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$drawable: int abc_list_focused_holo
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_ActionBar
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: java.util.HashMap listeners
com.facebook.react.views.image.ReactImageView: float mBorderRadius
com.swmansion.reanimated.R$dimen: int abc_action_button_min_height_material
com.swmansion.reanimated.R$dimen: int notification_right_side_padding_top
com.swmansion.reanimated.R$string: int header_description
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.swmansion.reanimated.R$styleable: int CompoundButton_android_button
com.swmansion.reanimated.R$attr: int buttonBarStyle
com.swmansion.reanimated.R$dimen: int compat_button_padding_horizontal_material
com.swmansion.reanimated.R$id: int accessibility_custom_action_5
com.swmansion.reanimated.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.swmansion.reanimated.R$attr: int alphabeticModifiers
com.swmansion.reanimated.R$styleable: int[] StateListDrawable
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.swmansion.reanimated.R$style: int Widget_AppCompat_RatingBar
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.swmansion.reanimated.R$id: int rn_redbox_loading_indicator
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_LEFT
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.swmansion.reanimated.R$styleable: int MenuGroup_android_enabled
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
com.swmansion.reanimated.R$styleable: int[] PopupWindow
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.core.view.WindowInsetsAnimationCompat$Callback: int mDispatchMode
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopStart
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Small
com.swmansion.reanimated.R$string: int rn_tab_description
com.swmansion.reanimated.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.swmansion.reanimated.R$attr: int textAppearancePopupMenuHeader
com.facebook.jni.CppSystemErrorException: int errorCode
com.swmansion.reanimated.R$attr: int roundBottomLeft
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundingBorderPadding
com.swmansion.reanimated.R$color: int primary_text_default_material_dark
com.swmansion.reanimated.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.swmansion.reanimated.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.swmansion.reanimated.R$attr: int autoSizeTextType
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider mJavaModuleProvider
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableTintMode
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.swmansion.reanimated.R$id: int action_mode_bar
com.swmansion.reanimated.R$id: int search_close_btn
com.swmansion.reanimated.R$styleable: int SearchView_android_inputType
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.swmansion.reanimated.R$color: int abc_btn_colored_text_material
com.swmansion.reanimated.R$string: int catalyst_dismiss_button
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display2
com.swmansion.reanimated.R$style: int Widget_AppCompat_CompoundButton_Switch
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_Dialog
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.swmansion.reanimated.R$id: int search_src_text
com.RNFetchBlob.RNFetchBlob: com.facebook.react.bridge.ReactApplicationContext RCTContext
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
com.swmansion.reanimated.R$styleable: int ActionBar_title
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar
com.swmansion.reanimated.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.swmansion.reanimated.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.swmansion.reanimated.R$anim: int abc_tooltip_exit
com.swmansion.reanimated.R$styleable: int MenuItem_android_checkable
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModulePromiseAsyncDispatch
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.swmansion.reanimated.R$dimen: int compat_notification_large_icon_max_height
com.swmansion.reanimated.R$color: int abc_primary_text_disable_only_material_dark
com.swmansion.reanimated.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.swmansion.reanimated.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Light
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.swmansion.reanimated.R$styleable: int SwitchCompat_switchPadding
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.swmansion.reanimated.layoutReanimation.Snapshot: int height
com.swmansion.reanimated.R$styleable: int GradientColorItem_android_color
com.swmansion.reanimated.R$drawable: int abc_dialog_material_background
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.swmansion.reanimated.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$id: int view_tree_lifecycle_owner
com.swmansion.reanimated.R$styleable: int MenuGroup_android_id
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.swmansion.reanimated.R$id: int accessibility_custom_action_8
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.swmansion.reanimated.R$color: int dim_foreground_material_light
com.swmansion.reanimated.R$attr: int autoCompleteTextViewStyle
com.swmansion.reanimated.R$attr: int listPreferredItemHeight
com.swmansion.reanimated.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_WIDTH
com.swmansion.reanimated.R$attr: int actionBarItemBackground
com.swmansion.reanimated.R$string: int abc_toolbar_collapse_description
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_X
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int accessibility_role
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Borderless
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.swmansion.reanimated.R$attr: int nestedScrollViewStyle
com.swmansion.reanimated.R$dimen: int abc_action_bar_overflow_padding_end_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_android_windowIsFloating
com.swmansion.reanimated.R$string: int catalyst_hot_reloading
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.swmansion.reanimated.R$color: int catalyst_logbox_background
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.swmansion.reanimated.NodesManager$4: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableStart
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.swmansion.reanimated.R$string: int catalyst_settings_title
com.swmansion.reanimated.R$string: int scrollbar_description
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState state
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionEndIconStyle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVATE_AFTER_LONG_PRESS
com.swmansion.reanimated.R$styleable: int SwitchCompat_thumbTextPadding
com.swmansion.reanimated.R$styleable: int MenuItem_iconTint
com.swmansion.reanimated.R$styleable: int[] ActionMode
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_PopupMenu
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.swmansion.reanimated.R$id: int split_action_bar
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useRuntimeSchedulerAlways
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionParent
com.swmansion.reanimated.R$attr: int logoDescription
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Body1
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.util.ArrayList viewsToSnapshot
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager viewManager
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState OPEN
com.swmansion.reanimated.R$attr: int fontProviderFetchTimeout
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.swmansion.reanimated.R$styleable: int MenuView_preserveIconSpacing
com.swmansion.reanimated.R$id: int right_side
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
com.swmansion.reanimated.R$styleable: int[] Capability
com.swmansion.reanimated.R$attr: int progressBarStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean DEBUG_MODE
com.swmansion.reanimated.R$styleable: int Toolbar_logo
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MIN_DURATION_MS
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.swmansion.reanimated.R$string: int menubar_description
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureNewCreateReloadDestroy
com.swmansion.reanimated.R$layout: int support_simple_spinner_dropdown_item
com.swmansion.reanimated.R$attr: int actualImageScaleType
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.swmansion.reanimated.R$color: int switch_thumb_material_light
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$layout: int abc_list_menu_item_layout
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.swmansion.reanimated.R$styleable: int SwitchCompat_thumbTint
com.rnfs.RNFSManager: android.util.SparseArray downloaders
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String NAME
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.swmansion.reanimated.R$id: int save_overlay_view
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_font
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionChip
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mAncestorsToRemove
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String NAME
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_overlayImage
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.reanimated.R$drawable: int abc_spinner_mtrl_am_alpha
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.facebook.react.bridge.ReactApplicationContext mContext
com.swmansion.reanimated.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
kotlinx.coroutines.CompletedExceptionally: int _handled
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingRight
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.swmansion.reanimated.R$color: int notification_icon_bg_color
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_android_thumb
com.swmansion.reanimated.R$drawable: int btn_checkbox_unchecked_mtrl
com.swmansion.reanimated.R$color: int abc_search_url_text_selected
com.swmansion.reanimated.R$styleable: int ActionBar_elevation
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat
com.swmansion.reanimated.R$styleable: int ActionMode_subtitleTextStyle
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.swmansion.reanimated.R$id: int accessibility_custom_action_1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
com.facebook.react.uimanager.ViewManager: java.lang.String NAME
com.swmansion.reanimated.R$id: int accessibility_custom_action_10
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.swmansion.reanimated.R$attr: int actionModeWebSearchDrawable
com.swmansion.reanimated.R$style: int Widget_AppCompat_PopupMenu
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$id: int progress_circular
com.swmansion.reanimated.R$style: int Platform_V25_AppCompat_Light
com.swmansion.reanimated.R$styleable: int Toolbar_maxButtonHeight
com.swmansion.reanimated.R$dimen: int abc_text_size_large_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.swmansion.reanimated.R$color: int highlighted_text_material_light
com.swmansion.reanimated.R$drawable: int abc_action_bar_item_background_material
com.swmansion.reanimated.R$drawable: int notification_bg_low_pressed
com.swmansion.reanimated.R$attr: int listItemLayout
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.swmansion.reanimated.R$attr: int font
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listMenuViewStyle
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.swmansion.reanimated.R$id: int accessibility_custom_action_20
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_dither
com.swmansion.reanimated.R$id: int text
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.swmansion.reanimated.R$id: int tag_transition_group
com.swmansion.reanimated.R$layout: int abc_list_menu_item_radio
com.swmansion.reanimated.R$attr: int roundBottomStart
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedElementsLookup
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsTryingToCreate
com.swmansion.reanimated.R$color: int material_deep_teal_500
com.swmansion.reanimated.R$attr: int buttonBarNegativeButtonStyle
com.swmansion.reanimated.R$color: int switch_thumb_material_dark
com.swmansion.reanimated.R$style: int Platform_ThemeOverlay_AppCompat
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Field mBorderRadiusField
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.swmansion.reanimated.R$string: int abc_menu_space_shortcut_label
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.swmansion.reanimated.R$id: int text2
com.swmansion.reanimated.R$dimen: int notification_subtext_size
com.swmansion.reanimated.R$id: int buttonPanel
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.swmansion.reanimated.R$attr: int actionDropDownStyle
com.google.android.material.search.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int accessibility_custom_action_24
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.swmansion.reanimated.ReanimatedModule$1: com.swmansion.reanimated.ReanimatedModule this$0
com.swmansion.reanimated.R$attr: int panelMenuListWidth
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat
com.swmansion.reanimated.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListView
com.facebook.react.config.ReactFeatureFlags: boolean enableRemoveDeleteTreeInstruction
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_backgroundImage
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.swmansion.reanimated.R$styleable: int[] FontFamilyFont
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mRemovedSharedViews
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.swmansion.reanimated.R$layout: int abc_action_mode_close_item_material
com.swmansion.reanimated.R$id: int submenuarrow
com.swmansion.reanimated.R$styleable: int SwitchCompat_trackTintMode
com.swmansion.reanimated.R$styleable: int Toolbar_subtitleTextAppearance
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.swmansion.reanimated.R$styleable: int AlertDialog_showTitle
com.swmansion.reanimated.R$attr: int queryPatterns
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_backgroundImage
com.swmansion.reanimated.R$styleable: int AlertDialog_buttonIconDimen
com.swmansion.reanimated.R$style: int DialogAnimationSlide
com.swmansion.reanimated.R$attr: int backgroundTint
com.swmansion.reanimated.NodesManager$1: com.swmansion.reanimated.NodesManager this$0
com.swmansion.reanimated.R$styleable: int AppCompatTheme_spinnerStyle
com.swmansion.reanimated.R$color: int abc_primary_text_material_light
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int Base_DialogWindowTitle_AppCompat
com.swmansion.reanimated.R$styleable: int MenuItem_android_checked
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogStyle
com.swmansion.reanimated.R$attr: int actionBarWidgetTheme
com.swmansion.reanimated.AndroidUIScheduler: java.lang.Runnable mUIThreadRunnable
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String NAME
com.swmansion.reanimated.R$drawable: int notification_bg_normal_pressed
com.swmansion.reanimated.R$color: int ripple_material_light
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
com.swmansion.reanimated.R$attr: int titleMarginEnd
com.swmansion.reanimated.R$color: int catalyst_redbox_background
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HORIZONTAL
com.swmansion.reanimated.R$attr: int queryBackground
com.swmansion.reanimated.R$styleable: int Capability_shortcutMatchRequired
com.swmansion.reanimated.R$attr: int paddingEnd
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.R$attr: int actionModeCloseContentDescription
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.swmansion.reanimated.R$color: int error_color_material_light
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.ref.WeakReference mContext
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int nextSensorId
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.swmansion.reanimated.R$layout: int abc_search_view
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_placeholderImageScaleType
com.swmansion.reanimated.R$styleable: int[] CompoundButton
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.common.GestureHandlerStateManager gestureHandlerStateManager
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener reanimatedKeyboardEventListener
com.swmansion.reanimated.R$id: int custom
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationManager
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.swmansion.reanimated.R$string: int alert_description
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_exitFadeDuration
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_RIGHT
com.swmansion.reanimated.R$attr: int tintMode
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionSubtitle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_spinBars
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.swmansion.reanimated.R$color: int androidx_core_secondary_text_default_material_light
com.swmansion.reanimated.R$string: int catalyst_sample_profiler_disable
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_fontWeight
com.swmansion.reanimated.R$dimen: int hint_alpha_material_dark
com.swmansion.reanimated.R$styleable: int ActionBar_customNavigationLayout
com.swmansion.reanimated.R$animator: int fragment_fade_exit
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
com.swmansion.reanimated.R$attr: int windowActionModeOverlay
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.swmansion.reanimated.R$color: int abc_btn_colored_borderless_text_material
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.WeakHashMap propManagersMap
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_TextView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.swmansion.reanimated.R$attr: int suggestionRowLayout
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat_Light
com.swmansion.reanimated.R$styleable: int SearchView_suggestionRowLayout
com.swmansion.reanimated.R$layout: int notification_template_part_time
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dialogTheme
com.swmansion.reanimated.R$layout: int abc_activity_chooser_view
com.swmansion.reanimated.R$styleable: int View_paddingStart
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
com.swmansion.reanimated.R$styleable: int AppCompatTheme_checkboxStyle
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int sHolderCount
com.swmansion.reanimated.R$attr: int actionModePasteDrawable
com.swmansion.reanimated.R$attr: int progressBarImageScaleType
com.swmansion.reanimated.R$attr: int alertDialogStyle
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] $VALUES
com.swmansion.reanimated.R$styleable: int ActionMenuItemView_android_minWidth
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String NAME
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.swmansion.reanimated.R$id: int accessibility_custom_action_30
com.swmansion.reanimated.R$attr: int title
com.swmansion.reanimated.R$styleable: int[] PopupWindowBackgroundState
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_fadeDuration
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
com.swmansion.reanimated.R$attr: int iconTintMode
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: android.content.SharedPreferences mSharedPreferences
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.swmansion.reanimated.R$styleable: int[] AppCompatEmojiHelper
com.facebook.react.config.ReactFeatureFlags: boolean warnOnLegacyNativeModuleSystemUse
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.swmansion.reanimated.R$string: int abc_menu_shift_shortcut_label
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: long mMaxAnimationDuration
com.swmansion.reanimated.R$attr: int actionModeFindDrawable
com.swmansion.reanimated.R$styleable: int SearchView_goIcon
com.swmansion.reanimated.R$dimen: int highlight_alpha_material_colored
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MIN_POINTERS
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.swmansion.reanimated.R$dimen: int abc_action_button_min_width_overflow_material
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Headline
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mAddedSharedViews
com.swmansion.reanimated.R$styleable: int SearchView_android_hint
com.swmansion.reanimated.R$id: int accessibility_action_clickable_span
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.swmansion.reanimated.R$string: int state_busy_description
com.swmansion.reanimated.R$id: int tag_unhandled_key_event_manager
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
com.swmansion.reanimated.R$color: int secondary_text_default_material_light
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] rotation
com.facebook.react.turbomodule.core.TurboModuleManager: boolean sIsSoLibraryLoaded
com.swmansion.reanimated.R$styleable: int AlertDialog_buttonPanelSideLayout
com.swmansion.reanimated.R$attr: int drawableBottomCompat
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.swmansion.reanimated.R$styleable: int View_android_focusable
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: java.lang.Runnable mCompletionRunnable
com.swmansion.reanimated.R$attr: int defaultQueryHint
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback mFrameCallback
com.swmansion.reanimated.R$color: int abc_background_cache_hint_selector_material_dark
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.swmansion.reanimated.R$styleable: int SwitchCompat_switchTextAppearance
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginX
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int[] GenericDraweeHierarchy
com.swmansion.reanimated.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.swmansion.reanimated.R$drawable: int abc_btn_check_material
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int ActionBar_progressBarStyle
com.swmansion.reanimated.R$style: int Base_Animation_AppCompat_Dialog
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.swmansion.reanimated.R$integer: int react_native_inspector_proxy_port
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_showDividers
com.facebook.react.bridge.Inspector$Page: int mId
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundingBorderColor
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderQuery
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.NodesManager mNodesManager
com.swmansion.reanimated.R$attr: int buttonPanelSideLayout
com.swmansion.reanimated.R$styleable: int SearchView_searchHintIcon
com.swmansion.reanimated.R$id: int tag_window_insets_animation_callback
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.swmansion.reanimated.R$dimen: int abc_button_inset_vertical_material
com.swmansion.reanimated.R$layout: int dev_loading_view
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.swmansion.reanimated.R$id: int group_divider
androidx.core.view.WindowInsetsAnimationCompat$Callback: android.view.WindowInsets mDispachedInsets
com.swmansion.reanimated.R$string: int catalyst_debug_chrome_stop
com.swmansion.reanimated.R$style: int Widget_AppCompat_RatingBar_Small
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.swmansion.reanimated.R$styleable: int FontFamilyFont_font
com.swmansion.reanimated.R$styleable: int MenuItem_actionProviderClass
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonStyle
com.swmansion.reanimated.R$string: int timer_description
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_X
com.swmansion.reanimated.R$attr: int closeIcon
com.swmansion.reanimated.R$attr: int actionModeSelectAllDrawable
com.swmansion.reanimated.R$styleable: int AppCompatTextView_fontFamily
com.swmansion.reanimated.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.swmansion.reanimated.R$dimen: int abc_text_size_caption_material
com.swmansion.reanimated.R$styleable: int AppCompatTextView_lineHeight
com.swmansion.reanimated.R$id: int fitStart
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.swmansion.reanimated.R$attr: int checkboxStyle
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginY
com.swmansion.reanimated.R$attr: int listChoiceBackgroundIndicator
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.ThreadPoolExecutor fsThreadPool
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.swmansion.reanimated.R$id: int accessibility_custom_action_16
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
com.swmansion.reanimated.R$attr: int dialogPreferredPadding
com.swmansion.reanimated.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display4
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithProgress
com.swmansion.reanimated.R$attr: int tickMark
com.swmansion.reanimated.R$styleable: int Fragment_android_id
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.swmansion.reanimated.R$attr: int popupWindowStyle
com.swmansion.reanimated.R$string: int abc_menu_function_shortcut_label
com.swmansion.reanimated.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
com.swmansion.reanimated.R$styleable: int FontFamilyFont_ttcIndex
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Title
com.swmansion.reanimated.R$string: int abc_action_mode_done
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginStart
com.swmansion.reanimated.R$style: int AlertDialog_AppCompat
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_RESOURCES
com.facebook.react.config.ReactFeatureFlags: boolean useMapBufferProps
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot targetViewSnapshot
com.swmansion.reanimated.R$color: int abc_hint_foreground_material_light
com.swmansion.reanimated.R$styleable: int ActionBar_subtitleTextStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_textAppearance
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState CLOSED
com.swmansion.reanimated.R$style: int Theme_AppCompat_NoActionBar
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_pressedStateOverlayImage
com.swmansion.reanimated.R$attr: int navigationMode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.swmansion.reanimated.R$styleable: int[] AnimatedStateListDrawableItem
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] quaternion
com.swmansion.reanimated.R$styleable: int ActionBar_logo
com.swmansion.reanimated.R$attr: int titleMargin
com.swmansion.reanimated.R$styleable: int GradientColor_android_centerY
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_RADIUS
com.swmansion.reanimated.R$attr: int pressedStateOverlayImage
com.swmansion.reanimated.R$anim: int abc_slide_out_top
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.swmansion.reanimated.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Colored
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.swmansion.reanimated.R$style: int Base_AlertDialog_AppCompat_Light
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.swmansion.reanimated.R$styleable: int GradientColor_android_startColor
com.facebook.react.turbomodule.core.TurboModulePerfLogger: boolean sIsSoLibraryLoaded
com.swmansion.reanimated.R$drawable: int abc_star_black_48dp
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.swmansion.reanimated.R$styleable: int GradientColor_android_type
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.swmansion.reanimated.R$color: int abc_tint_edittext
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dialog
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
com.swmansion.reanimated.R$style: int Base_V26_Theme_AppCompat_Light
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display3
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.swmansion.reanimated.R$layout: int abc_dialog_title_material
com.swmansion.reanimated.R$styleable: int MenuItem_android_id
com.swmansion.reanimated.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.uimanager.NativeViewHierarchyManager: android.widget.PopupMenu mPopupMenu
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetLeft
com.swmansion.reanimated.NodesManager$1: java.lang.String val$commandId
com.swmansion.reanimated.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.swmansion.reanimated.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingLeft
com.swmansion.reanimated.R$style: int Widget_Autofill
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SeekBar
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int CalendarDatePickerDialog
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HEIGHT
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View sourceView
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Body1
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_weightSum
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_START
com.swmansion.reanimated.R$styleable: int AppCompatTheme_viewInflaterClass
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.swmansion.reanimated.R$styleable: int ViewStubCompat_android_id
com.swmansion.reanimated.R$dimen: int highlight_alpha_material_light
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Small_Inverse
com.swmansion.reanimated.R$styleable: int ActionBar_subtitle
com.swmansion.reanimated.R$id: int view_tree_view_model_store_owner
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.swmansion.reanimated.R$string: int abc_action_bar_home_description
com.swmansion.reanimated.R$styleable: int GradientColorItem_android_offset
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.swmansion.reanimated.R$drawable: int abc_text_cursor_material
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_tickMarkTint
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.swmansion.reanimated.R$string: int abc_menu_sym_shortcut_label
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Title_Inverse
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.swmansion.reanimated.R$drawable: int abc_cab_background_internal_bg
com.swmansion.reanimated.R$attr: int drawableRightCompat
com.swmansion.reanimated.R$styleable: int ActionBar_itemPadding
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.R$drawable: int abc_btn_radio_material
com.swmansion.reanimated.R$color: int dim_foreground_disabled_material_light
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.swmansion.reanimated.R$color: int abc_secondary_text_material_light
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.swmansion.reanimated.R$id: int rn_redbox_dismiss_button
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundAsCircle
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.swmansion.reanimated.R$string: int catalyst_debug
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_orientation
com.swmansion.reanimated.R$styleable: int ActionBar_backgroundSplit
com.swmansion.reanimated.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.swmansion.reanimated.R$id: int spacer
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.swmansion.reanimated.R$dimen: int abc_text_size_display_2_material
com.swmansion.reanimated.R$styleable: int FontFamilyFont_fontVariationSettings
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_progressBarImageScaleType
com.swmansion.reanimated.R$drawable: int abc_scrubber_track_mtrl_alpha
com.swmansion.reanimated.R$style: int Platform_Widget_AppCompat_Spinner
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Colored
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
com.swmansion.reanimated.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.swmansion.reanimated.R$attr: int buttonBarNeutralButtonStyle
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.swmansion.reanimated.R$attr: int fontProviderQuery
com.swmansion.reanimated.R$styleable: int SearchView_android_textAppearance
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionSubtitle
com.swmansion.reanimated.R$styleable: int ActionMode_background
com.swmansion.reanimated.R$attr: int roundBottomRight
com.swmansion.reanimated.R$layout: int abc_popup_menu_item_layout
com.swmansion.reanimated.R$color: int foreground_material_dark
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Subhead
com.swmansion.reanimated.R$string: int catalyst_reload_error
com.swmansion.reanimated.R$style: int Theme_AppCompat_Dialog_MinWidth
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListView
com.swmansion.reanimated.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.swmansion.reanimated.R$styleable: int AppCompatImageView_tint
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_DIST
com.swmansion.reanimated.R$drawable: int abc_cab_background_top_mtrl_alpha
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.ReaCompatibility compatibility
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner_Underlined
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$drawable: int btn_checkbox_checked_mtrl
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.swmansion.reanimated.R$dimen: int abc_cascading_menus_min_smallest_width
com.swmansion.reanimated.R$color: int ripple_material_dark
com.swmansion.reanimated.R$id: int content
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat
com.swmansion.reanimated.R$id: int action_menu_divider
com.swmansion.reanimated.R$attr: int editTextBackground
com.swmansion.reanimated.R$attr: int fontProviderSystemFontFamily
com.swmansion.reanimated.NodesManager: java.util.concurrent.ConcurrentLinkedQueue mEventQueue
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NUMBER_OF_POINTERS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY
com.swmansion.reanimated.R$string: int catalyst_debug_chrome
com.swmansion.reanimated.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.swmansion.reanimated.R$drawable: int abc_ic_menu_overflow_material
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_constantSize
com.swmansion.reanimated.R$styleable: int ActionBar_progressBarPadding
com.swmansion.reanimated.R$id: int center
com.swmansion.reanimated.NodesManager$2: com.swmansion.reanimated.NodesManager this$0
com.swmansion.reanimated.R$dimen: int abc_action_bar_default_padding_start_material
com.swmansion.reanimated.R$styleable: int AlertDialog_android_layout
com.swmansion.reanimated.R$attr: int autoSizeMinTextSize
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Large
com.swmansion.reanimated.R$styleable: int SearchView_useDrawerArrowDrawable
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.swmansion.reanimated.R$id: int accessibility_custom_action_3
com.swmansion.reanimated.R$layout: int abc_list_menu_item_checkbox
com.swmansion.reanimated.NodesManager$1: int val$viewTag
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
com.swmansion.reanimated.R$drawable: int abc_control_background_material
com.swmansion.reanimated.R$string: int abc_search_hint
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.swmansion.reanimated.R$color: int material_grey_50
com.swmansion.reanimated.R$style: int Widget_AppCompat_TextView
com.swmansion.reanimated.R$id: int line3
com.swmansion.reanimated.R$string: int abc_prepend_shortcut_label
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_Dialog
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.swmansion.reanimated.R$styleable: int CheckedTextView_checkMarkCompat
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_RADIUS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.swmansion.reanimated.R$id: int rn_redbox_report_label
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String MODULE_NAME
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mCurrentSharedTransitionViews
com.swmansion.reanimated.CopiedEvent: java.lang.String eventName
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.swmansion.reanimated.R$attr: int commitIcon
com.swmansion.reanimated.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.swmansion.reanimated.R$attr: int actionModeBackground
com.swmansion.reanimated.R$styleable: int AppCompatTheme_selectableItemBackground
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.swmansion.reanimated.R$dimen: int abc_alert_dialog_button_dimen
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorControlActivated
com.swmansion.reanimated.R$styleable: int[] AppCompatImageView
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_CompactMenu
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String NAME
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController mLayoutAnimator
com.swmansion.reanimated.R$animator: int fragment_close_enter
com.swmansion.reanimated.R$string: int image_description
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mContext
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String NAME
com.swmansion.reanimated.R$anim: int catalyst_slide_down
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.swmansion.reanimated.R$dimen: int abc_text_size_display_1_material
com.swmansion.reanimated.R$id: int fitXY
com.swmansion.reanimated.R$color: int bright_foreground_material_light
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.swmansion.reanimated.R$id: int info
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray mLayoutHandlers
com.swmansion.reanimated.R$dimen: int abc_action_bar_content_inset_material
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.ViewGroup parent
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.swmansion.reanimated.R$dimen: int abc_text_size_headline_material
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.swmansion.reanimated.R$id: int accessibility_custom_action_11
com.swmansion.reanimated.R$integer: int abc_config_activityDefaultDur
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_retryImage
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViewManagers
com.swmansion.reanimated.R$attr: int drawableLeftCompat
com.swmansion.reanimated.layoutReanimation.Snapshot: int originY
com.swmansion.reanimated.R$styleable: int SearchView_headerLayout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.swmansion.reanimated.R$string: int catalyst_debug_stop
com.swmansion.reanimated.R$dimen: int abc_dialog_padding_top_material
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionTitle
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_title
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_RADIUS
com.swmansion.reanimated.R$styleable: int Spinner_android_popupBackground
com.swmansion.reanimated.R$drawable: int notification_tile_bg
com.swmansion.reanimated.R$id: int title_template
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_PopupMenu
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetRight
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonStyleSmall
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.swmansion.reanimated.R$id: int add
com.swmansion.reanimated.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.swmansion.reanimated.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.swmansion.reanimated.R$drawable: int abc_ratingbar_small_material
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Tooltip
com.swmansion.reanimated.R$string: int abc_action_menu_overflow_description
com.swmansion.reanimated.R$drawable: int abc_btn_borderless_material
com.swmansion.reanimated.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.swmansion.reanimated.R$drawable: int abc_spinner_textfield_background_material
com.swmansion.reanimated.R$styleable: int CheckedTextView_checkMarkTintMode
com.swmansion.reanimated.R$attr: int colorControlNormal
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.swmansion.reanimated.R$styleable: int[] ViewBackgroundHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.swmansion.reanimated.R$string: int abc_searchview_description_clear
com.swmansion.reanimated.R$attr: int activityChooserViewStyle
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.swmansion.reanimated.R$styleable: int Capability_queryPatterns
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.swmansion.reanimated.R$styleable: int SearchView_android_focusable
com.swmansion.reanimated.R$string: int tablist_description
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.swmansion.reanimated.R$attr: int listMenuViewStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.swmansion.reanimated.R$styleable: int Toolbar_subtitleTextColor
com.swmansion.reanimated.R$dimen: int notification_main_column_padding_top
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginEnd
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViews
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.R$styleable: int Toolbar_popupTheme
com.swmansion.reanimated.R$attr: int thumbTintMode
com.swmansion.reanimated.R$drawable: int abc_list_selector_disabled_holo_light
com.swmansion.reanimated.R$styleable: int AppCompatTheme_panelBackground
com.swmansion.reanimated.R$attr: int buttonTint
com.swmansion.reanimated.R$style: int Animation_AppCompat_DropDownUp
com.swmansion.reanimated.R$color: int bright_foreground_inverse_material_dark
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_SHOULD_CANCEL_WHEN_OUTSIDE
com.swmansion.reanimated.R$attr: int firstBaselineToTopHeight
com.swmansion.reanimated.R$id: int accessibility_custom_action_22
com.swmansion.reanimated.R$layout: int abc_action_menu_item_layout
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_TabText
com.swmansion.reanimated.R$color: int accent_material_dark
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.interop.InteropModuleRegistry mInteropModuleRegistry
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.swmansion.reanimated.R$attr: int drawableSize
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
com.swmansion.reanimated.R$dimen: int hint_pressed_alpha_material_light
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: boolean sIsSoLibraryLoaded
com.swmansion.reanimated.R$attr: int shortcutMatchRequired
com.swmansion.reanimated.R$string: int catalyst_perf_monitor_stop
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.swmansion.reanimated.R$styleable: int SwitchCompat_showText
com.swmansion.reanimated.R$animator: int fragment_fade_enter
com.swmansion.reanimated.R$id: int wrap_content
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Inverse
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter mEventEmitter
com.swmansion.reanimated.R$attr: int roundTopStart
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderPackage
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_variablePadding
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_FIELDS
com.swmansion.reanimated.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarSize
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundWithOverlayColor
com.swmansion.reanimated.R$color: int material_grey_300
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.ThreadPoolExecutor threadPool
com.swmansion.reanimated.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager parentViewManager
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.lang.ref.WeakReference mWeakAndroidUIScheduler
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Spinner
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$eventListener$1 eventListener
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_placeholderImage
com.swmansion.reanimated.R$animator: int fragment_open_exit
com.swmansion.reanimated.R$style: int Animation_Catalyst_LogBox
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.swmansion.reanimated.R$styleable: int Toolbar_subtitle
com.swmansion.reanimated.R$string: int abc_action_bar_up_description
com.swmansion.reanimated.R$layout: int abc_action_bar_up_container
com.swmansion.reanimated.R$style: int Platform_V21_AppCompat
com.swmansion.reanimated.R$styleable: int[] FontFamily
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat_Dialog
com.swmansion.reanimated.R$id: int topPanel
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableEndCompat
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithAnimation
com.swmansion.reanimated.R$styleable: int[] MenuGroup
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TRANSFORM_MATRIX
com.swmansion.reanimated.R$attr: int dropDownListViewStyle
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String NAME
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_DISALLOW_INTERRUPTION
com.swmansion.reanimated.R$style: int Theme_Catalyst_LogBox
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
com.swmansion.reanimated.R$color: int dim_foreground_material_dark
com.swmansion.reanimated.R$attr: int actionButtonStyle
com.facebook.react.uimanager.ViewManager: int mRecyclableViewsBufferSize
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: java.lang.ref.WeakReference reactContext
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
com.swmansion.reanimated.R$id: int list_item
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.swmansion.reanimated.R$dimen: int abc_text_size_body_2_material
com.swmansion.reanimated.R$color: int abc_primary_text_disable_only_material_light
com.swmansion.reanimated.R$drawable: int abc_btn_check_to_on_mtrl_000
com.swmansion.reanimated.AndroidUIScheduler: java.util.concurrent.atomic.AtomicBoolean mActive
com.swmansion.reanimated.R$color: int switch_thumb_disabled_material_dark
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.swmansion.reanimated.R$string: int spinbutton_description
com.swmansion.reanimated.R$dimen: int abc_star_medium
com.swmansion.reanimated.R$layout: int abc_select_dialog_material
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_viewAspectRatio
com.swmansion.reanimated.R$styleable: int Toolbar_menu
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.swmansion.reanimated.R$id: int image
com.swmansion.reanimated.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.swmansion.reanimated.R$color: int foreground_material_light
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeTheme
com.swmansion.reanimated.R$attr: int titleMarginStart
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.swmansion.reanimated.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.swmansion.reanimated.R$id: int icon
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionChip
com.swmansion.reanimated.R$styleable: int[] View
com.swmansion.reanimated.R$drawable: int notification_bg_low
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.R$styleable: int ColorStateListItem_android_alpha
com.swmansion.reanimated.R$style: int Base_V23_Theme_AppCompat_Light
com.swmansion.reanimated.R$style: int Theme_AppCompat_DialogWhenLarge
com.swmansion.reanimated.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.swmansion.reanimated.NodesManager: java.util.concurrent.atomic.AtomicBoolean mCallbackPosted
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.swmansion.reanimated.R$attr: int switchPadding
com.dylanvann.fastimage.FastImageViewManager: java.lang.String REACT_ON_LOAD_START_EVENT
com.swmansion.reanimated.R$id: int special_effects_controller_view_tag
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeStyle
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.swmansion.reanimated.R$attr: int textAppearanceSmallPopupMenu
com.swmansion.reanimated.R$attr: int textColorSearchUrl
com.swmansion.reanimated.R$dimen: int notification_media_narrow_margin
com.swmansion.reanimated.R$color: int material_blue_grey_950
com.swmansion.reanimated.R$styleable: int CompoundButton_buttonTintMode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy mNativeProxy
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.swmansion.reanimated.R$styleable: int AppCompatTheme_panelMenuListTheme
com.swmansion.reanimated.R$layout: int redbox_item_title
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Button
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.swmansion.reanimated.R$color: int abc_decor_view_status_guard_light
com.swmansion.reanimated.R$dimen: int abc_dialog_padding_material
com.swmansion.reanimated.R$attr: int selectableItemBackground
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_pressedStateOverlayImage
com.swmansion.reanimated.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.swmansion.reanimated.NodesManager$1: com.facebook.react.bridge.ReadableArray val$commandArgs
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_ttcIndex
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
com.swmansion.reanimated.R$styleable: int TextAppearance_textAllCaps
com.swmansion.reanimated.R$drawable: int abc_text_select_handle_right_mtrl
com.swmansion.reanimated.R$styleable: int SearchView_hideNavigationIcon
com.swmansion.reanimated.R$styleable: int[] MenuView
com.swmansion.reanimated.R$drawable: int abc_seekbar_thumb_material
com.swmansion.reanimated.R$string: int catalyst_inspector_stop
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.swmansion.reanimated.R$attr: int contentDescription
com.swmansion.reanimated.R$id: int none
com.swmansion.reanimated.R$attr: int ratingBarStyle
com.swmansion.reanimated.R$attr: int actionMenuTextAppearance
com.swmansion.reanimated.R$attr: int drawableEndCompat
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
com.swmansion.reanimated.R$id: int fitCenter
com.swmansion.reanimated.R$id: int action_bar_container
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean mLayoutAnimationEnabled
com.swmansion.reanimated.R$styleable: int AppCompatTheme_editTextBackground
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String NAME
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$attr: int actionBarTheme
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textColorSearchUrl
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTabStyle
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_fadeDuration
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int off
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.swmansion.reanimated.R$styleable: int CheckedTextView_android_checkMark
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_progressBarImageScaleType
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ProgressBar
com.swmansion.reanimated.R$attr: int editTextStyle
com.swmansion.reanimated.R$attr: int controlBackground
com.swmansion.reanimated.R$string: int abc_shareactionprovider_share_with
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.swmansion.reanimated.R$styleable: int AppCompatTheme_popupWindowStyle
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomRight
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext mContext
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
com.swmansion.reanimated.R$style: int Widget_AppCompat_AutoCompleteTextView
com.swmansion.reanimated.R$animator: int fragment_close_exit
com.facebook.react.config.ReactFeatureFlags: boolean enableViewRecycling
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_X
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String NAME
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.R$id: int centerInside
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
com.facebook.react.config.ReactFeatureFlags: int turboModuleBindingMode
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.swmansion.reanimated.R$id: int select_dialog_listview
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_POINTERS
com.swmansion.reanimated.R$styleable: int[] SwitchCompat
com.swmansion.reanimated.R$string: int catalyst_copy_button
com.swmansion.reanimated.R$styleable: int[] GradientColor
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager mReanimatedNativeHierarchyManager
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.swmansion.reanimated.R$color: int primary_dark_material_dark
com.swmansion.reanimated.R$attr: int roundAsCircle
com.swmansion.reanimated.R$id: int accessibility_collection_item
com.facebook.react.config.ReactFeatureFlags: boolean enableCloseVisibleGapBetweenPaths
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display1
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.swmansion.reanimated.R$attr: int backgroundSplit
com.swmansion.reanimated.R$attr: int contentInsetStartWithNavigation
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.swmansion.reanimated.ReanimatedModule$1: java.util.ArrayList val$operations
com.swmansion.reanimated.R$styleable: int AppCompatTheme_switchStyle
com.dylanvann.fastimage.FastImageViewModule: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$string: int catalyst_reload_button
com.swmansion.reanimated.R$attr: int contentInsetEnd
com.swmansion.reanimated.R$attr: int height
com.swmansion.reanimated.R$styleable: int Toolbar_collapseIcon
com.swmansion.reanimated.R$attr: int actionBarSplitStyle
com.swmansion.reanimated.R$style: int Theme_AppCompat
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetStart
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.swmansion.reanimated.R$id: int src_over
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.swmansion.reanimated.R$attr: int switchTextAppearance
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopLeft
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_failureImageScaleType
com.swmansion.reanimated.R$styleable: int MenuView_subMenuArrow
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingStart
com.swmansion.reanimated.R$attr: int measureWithLargestChild
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.swmansion.reanimated.R$id: int submit_area
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.swmansion.reanimated.R$string: int catalyst_hot_reloading_auto_enable
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_actualImageScaleType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.swmansion.reanimated.R$drawable: int abc_list_selector_background_transition_holo_dark
com.swmansion.reanimated.R$styleable: int[] ActionMenuItemView
com.swmansion.reanimated.R$id: int accessibility_value
com.swmansion.reanimated.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.swmansion.reanimated.R$styleable: int MenuItem_android_icon
com.swmansion.reanimated.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomEnd
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$id: int accessibility_custom_action_12
com.swmansion.reanimated.R$id: int action_menu_presenter
com.swmansion.reanimated.R$layout: int custom_dialog
com.swmansion.reanimated.R$attr: int paddingStart
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.swmansion.reanimated.R$drawable: int notification_bg
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableItem_android_id
com.swmansion.reanimated.R$attr: int colorError
com.swmansion.reanimated.R$dimen: int tooltip_vertical_padding
com.facebook.react.config.ReactFeatureFlags: boolean enableEarlyScheduledMountItemExecution
com.swmansion.reanimated.R$styleable: int SearchView_commitIcon
com.swmansion.reanimated.R$drawable: int abc_item_background_holo_light
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_PERF_LOGS
com.swmansion.reanimated.R$anim: int abc_tooltip_enter
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_Y
com.swmansion.reanimated.R$style: int Base_Animation_AppCompat_DropDownUp
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.swmansion.reanimated.NodesManager this$0
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Info
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeMinTextSize
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListMenuView
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.swmansion.reanimated.R$id: int accessibility_hint
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.rnfs.RNFSManager: java.lang.String RNFSExternalStorageDirectoryPath
com.swmansion.reanimated.R$layout: int abc_cascading_menu_item_layout
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.swmansion.reanimated.R$attr: int lineHeight
com.swmansion.reanimated.R$styleable: int[] TextAppearance
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Medium
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowNoTitle
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textSize
com.swmansion.reanimated.R$drawable: int test_level_drawable
com.swmansion.reanimated.R$layout: int abc_list_menu_item_icon
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState CLOSING
com.swmansion.reanimated.R$color: int tooltip_background_dark
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int EXITING
com.swmansion.reanimated.R$style: int Theme_AutofillInlineSuggestion
com.swmansion.reanimated.R$attr: int toolbarNavigationButtonStyle
com.swmansion.reanimated.R$drawable: int abc_list_divider_material
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.swmansion.reanimated.R$attr: int lastBaselineToBottomHeight
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.swmansion.reanimated.R$id: int time
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.swmansion.reanimated.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
com.swmansion.reanimated.R$style: int Animation_AppCompat_Dialog
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_DayNight
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_thickness
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionButton
com.swmansion.reanimated.R$string: int progressbar_description
com.swmansion.reanimated.R$color: int abc_tint_default
com.swmansion.reanimated.R$dimen: int tooltip_precise_anchor_threshold
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.swmansion.reanimated.R$dimen: int abc_dialog_min_width_major
com.facebook.react.animated.EventAnimationDriver: java.lang.String mEventName
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.swmansion.reanimated.R$layout: int abc_action_menu_layout
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.swmansion.reanimated.R$styleable: int SearchView_animateMenuItems
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.swmansion.reanimated.NodesManager: java.util.Set uiProps
com.swmansion.reanimated.R$bool: int abc_config_actionMenuItemAllCaps
com.swmansion.reanimated.R$attr: int actionModeCloseDrawable
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.swmansion.reanimated.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.swmansion.reanimated.R$dimen: int abc_control_inset_material
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundingBorderWidth
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isCatalystInstanceDestroyed
com.swmansion.reanimated.R$styleable: int FragmentContainerView_android_name
com.swmansion.reanimated.R$string: int abc_menu_ctrl_shortcut_label
com.swmansion.reanimated.R$attr: int titleMarginBottom
com.swmansion.reanimated.R$attr: int elevation
com.swmansion.reanimated.R$color: int abc_decor_view_status_guard
com.swmansion.reanimated.R$styleable: int MenuItem_android_visible
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowColor
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar
com.swmansion.reanimated.R$attr: int switchMinWidth
com.swmansion.reanimated.R$attr: int fontVariationSettings
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState UNKNOWN
com.swmansion.reanimated.R$dimen: int abc_dialog_list_padding_top_no_title
com.swmansion.reanimated.R$id: int search_go_btn
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.swmansion.reanimated.R$style: int Widget_AppCompat_SearchView
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.swmansion.reanimated.R$attr: int roundTopEnd
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_Y
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner_DropDown
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.swmansion.reanimated.R$id: int fragment_container_view_tag
com.swmansion.reanimated.R$dimen: int abc_text_size_title_material_toolbar
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.swmansion.reanimated.R$style: int Widget_AppCompat_SearchView_ActionBar
com.swmansion.reanimated.R$dimen: int notification_top_pad
com.swmansion.reanimated.R$attr: int buttonStyleSmall
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat_Dialog
com.swmansion.reanimated.ReanimatedModule: java.lang.String NAME
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$attr: int isAutofillInlineSuggestionTheme
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.swmansion.reanimated.R$styleable: int[] ColorStateListItem
com.swmansion.reanimated.R$attr: int emojiCompatEnabled
com.swmansion.reanimated.R$drawable: int notification_bg_low_normal
com.swmansion.reanimated.NodesManager$3: java.util.Queue val$copiedOperationsQueue
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.swmansion.reanimated.R$color: int bright_foreground_disabled_material_light
com.swmansion.reanimated.R$style: int CalendarDatePickerStyle
com.swmansion.reanimated.R$id: int expanded_menu
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String TAG
com.swmansion.reanimated.R$id: int dialog_button
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.swmansion.reanimated.R$attr: int actionBarPopupTheme
com.swmansion.reanimated.R$layout: int abc_activity_chooser_view_list_item
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.rnfs.RNFSManager: android.util.SparseArray uploaders
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.swmansion.reanimated.R$attr: int windowFixedWidthMinor
com.swmansion.reanimated.R$string: int abc_searchview_description_submit
com.swmansion.reanimated.R$attr: int listChoiceIndicatorSingleAnimated
com.swmansion.reanimated.R$styleable: int TextAppearance_textLocale
com.swmansion.reanimated.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$styleable: int ActionMode_backgroundSplit
com.swmansion.reanimated.R$attr: int panelMenuListTheme
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Small
com.swmansion.reanimated.R$styleable: int Spinner_android_prompt
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.Snapshot: int width
com.swmansion.reanimated.R$dimen: int notification_right_icon_size
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.swmansion.reanimated.BuildConfig: java.lang.String REANIMATED_VERSION_JAVA
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Time
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_SearchView
com.swmansion.reanimated.R$id: int accessibility_custom_action_23
com.swmansion.reanimated.R$styleable: int[] SearchView
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: java.lang.String NAME
com.swmansion.reanimated.R$dimen: int notification_top_pad_large_text
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_width_minor
com.swmansion.reanimated.R$attr: int splitTrack
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.swmansion.reanimated.R$attr: int backgroundTintMode
com.swmansion.reanimated.R$styleable: int GradientColor_android_endColor
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.NodesManager: java.util.List mFrameCallbacks
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
com.swmansion.reanimated.R$styleable: int[] LinearLayoutCompat_Layout
com.swmansion.reanimated.R$dimen: int compat_notification_large_icon_max_width
com.swmansion.reanimated.R$style: int Theme
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.swmansion.reanimated.R$styleable: int ActivityChooserView_initialActivityCount
com.swmansion.reanimated.R$id: int tag_state_description
com.swmansion.reanimated.R$color: int androidx_core_ripple_material_light
com.swmansion.reanimated.R$styleable: int TextAppearance_fontVariationSettings
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopEnd
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorAccent
com.swmansion.reanimated.R$id: int accessibility_custom_action_19
com.swmansion.reanimated.R$attr: int roundingBorderWidth
com.swmansion.reanimated.R$layout: int abc_screen_toolbar
com.swmansion.reanimated.R$dimen: int abc_text_size_subhead_material
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_X
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomLeft
com.swmansion.reanimated.R$color: int secondary_text_disabled_material_dark
com.swmansion.reanimated.R$styleable: int[] AppCompatTextView
com.swmansion.reanimated.R$dimen: int abc_star_small
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.swmansion.reanimated.R$color: int material_grey_900
com.swmansion.reanimated.R$id: int accessibility_custom_action_4
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mEnteringViews
com.swmansion.reanimated.R$style: int Widget_AppCompat_ButtonBar
com.swmansion.reanimated.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
com.swmansion.reanimated.R$attr: int dropdownListPreferredItemHeight
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.swmansion.reanimated.R$drawable: int abc_ratingbar_material
com.swmansion.reanimated.R$string: int catalyst_perf_monitor
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.swmansion.reanimated.R$dimen: int abc_search_view_preferred_height
com.swmansion.reanimated.R$string: int catalyst_inspector
com.swmansion.reanimated.R$attr: int fontProviderCerts
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionMenuTextColor
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ImageButton
com.swmansion.reanimated.R$styleable: int MenuItem_iconTintMode
com.swmansion.reanimated.R$dimen: int abc_search_view_preferred_width
com.swmansion.reanimated.R$styleable: int PopupWindow_overlapAnchor
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.swmansion.reanimated.R$id: int line1
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_X
com.swmansion.reanimated.R$attr: int switchStyle
com.swmansion.reanimated.R$drawable: int abc_btn_check_material_anim
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingViews
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MAX_POINTERS
com.swmansion.reanimated.R$id: int expand_activities_button
com.swmansion.reanimated.R$styleable: int MenuItem_android_alphabeticShortcut
com.swmansion.reanimated.R$id: int catalyst_redbox_title
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitecture
com.swmansion.reanimated.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_color
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomRight
com.swmansion.reanimated.R$attr: int numericModifiers
com.swmansion.reanimated.R$styleable: int[] ActivityChooserView
com.facebook.react.bridge.interop.InteropModuleRegistry: java.util.HashMap supportedModules
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int[] RecycleListView
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionTitle
com.swmansion.reanimated.R$styleable: int SwitchCompat_trackTint
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.swmansion.reanimated.R$styleable: int ColorStateListItem_android_color
com.swmansion.reanimated.R$styleable: int ViewBackgroundHelper_android_background
com.swmansion.reanimated.R$dimen: int abc_panel_menu_list_width
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String NAME
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int[] AppCompatSeekBar
com.swmansion.reanimated.R$dimen: int notification_large_icon_width
com.swmansion.reanimated.R$attr: int actionOverflowButtonStyle
com.swmansion.reanimated.R$attr: int progressBarAutoRotateInterval
com.swmansion.reanimated.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.swmansion.reanimated.R$id: int labelled_by
com.swmansion.reanimated.R$id: int titleDividerNoCustom
com.swmansion.reanimated.R$dimen: int hint_pressed_alpha_material_dark
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
com.swmansion.reanimated.R$color: int switch_thumb_normal_material_dark
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.swmansion.reanimated.R$attr: int initialActivityCount
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.swmansion.reanimated.R$style: int SpinnerDatePickerDialog
com.swmansion.reanimated.R$styleable: int[] SimpleDraweeView
com.swmansion.reanimated.R$id: int transition_layout_save
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.swmansion.reanimated.R$id: int scrollIndicatorUp
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_PROFILING_SETTINGS
com.swmansion.reanimated.R$styleable: int[] AlertDialog
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_TRANSFORM_MATRIX
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int failureImage
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$color: int background_material_dark
com.facebook.react.uimanager.GuardedFrameCallback: com.facebook.react.bridge.ReactContext mReactContext
com.swmansion.reanimated.R$layout: int abc_screen_simple_overlay_action_mode
com.swmansion.reanimated.R$layout: int notification_template_part_chronometer
com.swmansion.reanimated.R$id: int tag_on_receive_content_listener
com.swmansion.reanimated.R$styleable: int ViewStubCompat_android_layout
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.swmansion.reanimated.R$attr: int searchIcon
com.swmansion.reanimated.R$id: int checked
com.swmansion.reanimated.R$id: int tag_on_receive_content_mime_types
com.swmansion.reanimated.BuildConfig: int EXOPACKAGE_FLAGS
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.swmansion.reanimated.R$anim: int abc_popup_exit
com.swmansion.reanimated.R$styleable: int MenuItem_tooltipText
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.swmansion.reanimated.R$dimen: int abc_text_size_body_1_material
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int ENTERING
com.swmansion.reanimated.R$id: int rn_redbox_line_separator
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.R$attr: int trackTintMode
com.swmansion.reanimated.R$attr: int textAppearanceLargePopupMenu
com.swmansion.reanimated.R$attr: int alertDialogButtonGroupStyle
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.swmansion.reanimated.R$id: int transition_scene_layoutid_cache
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableStartCompat
com.swmansion.reanimated.R$drawable: int abc_ic_clear_material
com.swmansion.reanimated.R$styleable: int ActionBar_backgroundStacked
com.swmansion.reanimated.R$id: int search_edit_frame
com.swmansion.reanimated.R$styleable: int ColorStateListItem_lStar
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
com.swmansion.reanimated.R$id: int transition_position
com.swmansion.reanimated.R$attr: int listPopupWindowStyle
com.swmansion.reanimated.R$color: int accent_material_light
com.swmansion.reanimated.R$integer: int cancel_button_image_alpha
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_subtitle
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_ENABLED
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListPopupWindow
com.swmansion.reanimated.R$id: int save_non_transition_alpha
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.swmansion.reanimated.R$attr: int titleTextColor
com.swmansion.reanimated.R$styleable: int AlertDialog_listLayout
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double lastRead
com.swmansion.reanimated.R$styleable: int MenuItem_numericModifiers
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String KEY_CONSOLE_PATCH_SETTINGS
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomStart
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_height_major
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
com.swmansion.reanimated.R$anim: int catalyst_push_up_in
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.swmansion.reanimated.R$id: int activity_chooser_view_content
com.swmansion.reanimated.R$color: int secondary_text_default_material_dark
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.swmansion.reanimated.R$dimen: int abc_edit_text_inset_bottom_material
com.swmansion.reanimated.R$dimen: int abc_action_button_min_width_material
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.swmansion.reanimated.R$color: int background_material_light
com.swmansion.reanimated.R$styleable: int MenuView_android_windowAnimationStyle
com.swmansion.reanimated.R$attr: int submitBackground
com.swmansion.reanimated.R$interpolator: int fast_out_slow_in
com.swmansion.reanimated.R$dimen: int abc_select_dialog_padding_start_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.swmansion.reanimated.R$attr: int ttcIndex
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.swmansion.reanimated.R$styleable: int ActionBar_indeterminateProgressStyle
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
com.swmansion.reanimated.R$styleable: int MenuItem_android_enabled
com.swmansion.reanimated.R$drawable: int abc_list_selector_holo_dark
com.swmansion.reanimated.R$id: int focusCrop
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.swmansion.reanimated.R$attr: int isLightTheme
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider mCxxModuleProvider
com.swmansion.reanimated.R$color: int switch_thumb_disabled_material_light
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetRight
com.swmansion.reanimated.R$attr: int actionBarTabStyle
com.swmansion.reanimated.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.swmansion.reanimated.R$anim: int abc_slide_in_bottom
com.swmansion.reanimated.ReanimatedPackage$1: com.swmansion.reanimated.ReanimatedPackage this$0
com.swmansion.reanimated.R$styleable: int AlertDialog_multiChoiceItemLayout
com.swmansion.reanimated.R$string: int abc_menu_delete_shortcut_label
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.lang.ref.WeakReference reactContext
com.swmansion.reanimated.R$attr: int buttonIconDimen
com.swmansion.reanimated.R$id: int action_bar_root
com.swmansion.reanimated.R$dimen: int abc_list_item_padding_horizontal_material
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.swmansion.reanimated.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.swmansion.reanimated.R$style: int Base_V28_Theme_AppCompat_Light
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.swmansion.reanimated.R$string: int imagebutton_description
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mWeakAnimationsManager
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowDy
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionButton
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundWithOverlayColor
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.rnfs.RNFSManager: java.lang.String RNFSDownloadDirectoryPath
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
com.swmansion.reanimated.R$attr: int searchHintIcon
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
com.swmansion.reanimated.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textColorHint
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: int keyboardHeight
com.swmansion.reanimated.R$id: int accessibility_custom_action_31
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String NAME
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String NAME
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.swmansion.reanimated.R$dimen: int abc_control_padding_material
com.swmansion.reanimated.R$attr: int homeLayout
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.SensorManager sensorManager
com.swmansion.reanimated.R$styleable: int TextAppearance_fontFamily
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
com.swmansion.reanimated.R$styleable: int Toolbar_android_gravity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String NAME
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.swmansion.reanimated.R$drawable: int abc_textfield_search_material
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_height_minor
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.swmansion.reanimated.R$id: int parent_matrix
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.swmansion.reanimated.R$style: int AlertDialog_AppCompat_Light
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NEEDS_POINTER_DATA
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarItemBackground
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.swmansion.reanimated.R$attr: int buttonTintMode
com.swmansion.reanimated.R$id: int up
com.swmansion.reanimated.R$attr: int tint
com.swmansion.reanimated.R$attr: int actionModeCopyDrawable
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.swmansion.reanimated.R$string: int search_menu_title
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: int value
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.swmansion.reanimated.R$attr: int placeholderImage
com.swmansion.reanimated.R$id: int scrollView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionButton
com.swmansion.reanimated.R$color: int primary_text_default_material_light
com.swmansion.reanimated.R$attr: int titleTextStyle
com.swmansion.reanimated.R$string: int radiogroup_description
com.swmansion.reanimated.R$id: int notification_background
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.os.Handler sCompletionHandler
com.swmansion.reanimated.NodesManager: boolean mTryRunBatchUpdatesSynchronously
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int mModuleId
com.swmansion.reanimated.R$attr: int overlayImage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager mSharedTransitionManager
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableTop
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.swmansion.reanimated.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.swmansion.reanimated.R$layout: int select_dialog_item_material
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_PopupWindow
com.swmansion.reanimated.R$attr: int viewAspectRatio
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetStart
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogTheme
com.swmansion.reanimated.R$attr: int colorAccent
com.swmansion.reanimated.R$styleable: int Toolbar_titleTextAppearance
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionStartIconStyle
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorType sensorType
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_DarkActionBar
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.swmansion.reanimated.R$color: int abc_hint_foreground_material_dark
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.swmansion.reanimated.R$dimen: int notification_content_margin_start
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.swmansion.reanimated.R$dimen: int abc_button_padding_horizontal_material
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListView_Menu
com.swmansion.reanimated.R$styleable: int[] Toolbar
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.swmansion.reanimated.R$styleable: int AppCompatTextView_android_textAppearance
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.swmansion.reanimated.R$attr: int roundWithOverlayColor
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionDropDownStyle
com.swmansion.reanimated.R$attr: int dialogTheme
com.swmansion.reanimated.R$color: int bright_foreground_disabled_material_dark
com.swmansion.reanimated.R$id: int action_mode_close_button
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String NAME
com.facebook.react.config.ReactFeatureFlags: boolean useNativeState
com.swmansion.reanimated.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.swmansion.reanimated.R$style: int Theme_AppCompat_Dialog_Alert
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomStart
com.swmansion.reanimated.R$string: int abc_shareactionprovider_share_with_application
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorError
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int Widget_AppCompat_Toolbar
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.swmansion.reanimated.R$attr: int singleChoiceItemLayout
com.swmansion.reanimated.R$drawable: int abc_list_selector_disabled_holo_dark
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useTurboModuleInterop
com.swmansion.reanimated.R$styleable: int AppCompatImageView_tintMode
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler mAndroidUIScheduler
com.swmansion.reanimated.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textFontWeight
com.swmansion.reanimated.R$drawable: int abc_switch_track_mtrl_alpha
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionSubtitle
com.swmansion.reanimated.R$styleable: int ViewStubCompat_android_inflatedId
com.dylanvann.fastimage.FastImageViewManager: java.util.Map VIEWS_FOR_URLS
com.swmansion.reanimated.R$string: int abc_activitychooserview_choose_application
com.swmansion.reanimated.R$styleable: int[] AnimatedStateListDrawableTransition
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.swmansion.reanimated.R$styleable: int MenuItem_android_titleCondensed
com.swmansion.reanimated.R$drawable: int redbox_top_border_background
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.swmansion.reanimated.R$styleable: int[] ButtonBarLayout
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_HEIGHT
com.swmansion.reanimated.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadImpl messageQueueThread
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.swmansion.reanimated.R$id: int action_bar_subtitle
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseBooleanArray mRootTags
com.dylanvann.fastimage.FastImageViewManager: com.bumptech.glide.RequestManager requestManager
com.swmansion.reanimated.R$id: int icon_group
com.swmansion.reanimated.R$attr: int collapseContentDescription
com.swmansion.reanimated.R$attr: int checkMarkCompat
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorPrimaryDark
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.swmansion.reanimated.R$styleable: int ActionMode_height
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.R$dimen: int abc_action_bar_elevation_material
com.swmansion.reanimated.R$styleable: int SwitchCompat_switchMinWidth
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorButtonNormal
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $VALUES
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.swmansion.reanimated.R$styleable: int Toolbar_collapseContentDescription
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_tickMark
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.swmansion.reanimated.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.swmansion.reanimated.R$styleable: int AppCompatTextView_fontVariationSettings
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionMode
com.swmansion.reanimated.R$id: int action_divider
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.rnfs.RNFSManager: java.lang.String RNFSFileTypeRegular
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.swmansion.reanimated.R$color: int abc_tint_spinner
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.swmansion.reanimated.sensor.ReanimatedSensorListener: android.view.Display display
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$color: int button_material_light
com.swmansion.reanimated.R$attr: int dividerHorizontal
com.swmansion.reanimated.R$id: int progress_horizontal
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundingBorderPadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.swmansion.reanimated.R$styleable: int GradientColor_android_centerX
com.swmansion.reanimated.R$layout: int select_dialog_multichoice_material
com.swmansion.reanimated.R$id: int accessibility_actions
com.swmansion.reanimated.R$attr: int spinnerDropDownItemStyle
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule mUIManager
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_actualImageScaleType
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_WIDTH
com.swmansion.reanimated.R$dimen: int abc_text_size_display_3_material
com.swmansion.reanimated.R$styleable: int SwitchCompat_android_textOn
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.swmansion.reanimated.R$id: int fps_text
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.swmansion.reanimated.R$layout: int notification_action_tombstone
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.swmansion.reanimated.R$id: int accessibility_custom_action_0
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View targetView
com.swmansion.reanimated.R$dimen: int abc_dropdownitem_text_padding_right
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.swmansion.reanimated.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.ReanimatedEventDispatcher reanimatedEventDispatcher
com.swmansion.reanimated.R$style: int Theme_Catalyst_RedBox
com.swmansion.reanimated.R$id: int checkbox
com.swmansion.reanimated.R$styleable: int View_paddingEnd
com.swmansion.reanimated.R$id: int action_text
com.swmansion.reanimated.R$attr: int actionProviderClass
com.swmansion.reanimated.R$attr: int subtitleTextAppearance
com.swmansion.reanimated.R$attr: int subtitleTextColor
com.swmansion.reanimated.R$attr: int maxButtonHeight
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.swmansion.reanimated.R$color: int abc_background_cache_hint_selector_material_light
com.swmansion.reanimated.R$attr: int srcCompat
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.sensor.ReanimatedSensorContainer reanimatedSensorContainer
com.swmansion.reanimated.R$dimen: int abc_action_bar_default_padding_end_material
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean initOk
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.swmansion.reanimated.R$color: int material_grey_600
com.swmansion.reanimated.R$string: int catalyst_change_bundle_location
com.swmansion.reanimated.R$styleable: int ColorStateListItem_alpha
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
com.swmansion.reanimated.R$styleable: int[] LinearLayoutCompat
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$attr: int titleMarginTop
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.swmansion.reanimated.R$id: int edit_query
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
com.swmansion.reanimated.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.swmansion.reanimated.R$drawable: int autofill_inline_suggestion_chip_background
com.swmansion.reanimated.R$string: int status_bar_notification_info_overflow
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Line2
com.swmansion.reanimated.R$styleable: int ColorStateListItem_android_lStar
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.dylanvann.fastimage.FastImageViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_TRANSFORM_MATRIX
com.swmansion.reanimated.R$drawable: int abc_cab_background_top_material
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList targetKeysToTransform
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.swmansion.reanimated.R$attr: int checkedTextViewStyle
com.swmansion.reanimated.R$attr: int actionMenuTextColor
com.swmansion.reanimated.R$styleable: int MenuItem_android_title
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.swmansion.reanimated.R$layout: int abc_alert_dialog_title_material
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionEndIconStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.swmansion.reanimated.R$attr: int checkMarkTint
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Inverse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_SHOULD_ACTIVATE_ON_START
com.swmansion.reanimated.R$string: int menu_description
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutDeleteAnimation
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener this$0
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button
com.swmansion.reanimated.R$layout: int notification_action
com.swmansion.reanimated.R$attr: int textAppearanceListItemSecondary
com.swmansion.reanimated.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
com.swmansion.reanimated.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.swmansion.reanimated.R$dimen: int abc_action_bar_overflow_padding_start_material
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int GradientColor_android_centerColor
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorPrimary
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.swmansion.reanimated.R$id: int actions
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionMode
com.swmansion.reanimated.R$layout: int abc_tooltip
com.swmansion.reanimated.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.swmansion.reanimated.R$styleable: int MenuGroup_android_orderInCategory
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.swmansion.reanimated.R$layout: int abc_popup_menu_header_item_layout
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int Spinner_android_entries
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.swmansion.reanimated.R$id: int search_badge
com.swmansion.reanimated.R$attr: int actionViewClass
com.swmansion.reanimated.R$styleable: int MenuView_android_itemBackground
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.swmansion.reanimated.R$styleable: int TextAppearance_android_fontFamily
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.swmansion.reanimated.R$styleable: int AppCompatTheme_radioButtonStyle
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
com.swmansion.reanimated.R$drawable: int abc_ic_search_api_material
com.swmansion.reanimated.NodesManager: double lastFrameTimeMs
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.swmansion.reanimated.sensor.ReanimatedSensor: int interval
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$id: int action_context_bar
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.swmansion.reanimated.R$id: int forever
com.swmansion.reanimated.R$styleable: int ActionBar_hideOnContentScroll
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
com.swmansion.reanimated.BuildConfig: boolean IS_INTERNAL_BUILD
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.swmansion.reanimated.R$styleable: int[] ActionBarLayout
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int Toolbar_navigationContentDescription
com.swmansion.reanimated.R$attr: int colorPrimaryDark
com.swmansion.reanimated.R$id: int accessibility_custom_action_15
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.swmansion.reanimated.R$dimen: int abc_text_size_medium_material
com.swmansion.reanimated.R$attr: int dialogCornerRadius
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.swmansion.reanimated.R$color: int primary_text_disabled_material_light
com.swmansion.reanimated.BuildConfig: boolean DEBUG
com.swmansion.reanimated.R$dimen: int abc_seekbar_track_background_height_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.swmansion.reanimated.R$drawable: int abc_ratingbar_indicator_material
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.swmansion.reanimated.R$style: int Base_V23_Theme_AppCompat
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String NAME
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
com.swmansion.reanimated.R$attr: int windowMinWidthMajor
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_fontStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.swmansion.reanimated.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.swmansion.reanimated.R$attr: int dividerPadding
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.swmansion.reanimated.R$drawable: int abc_item_background_holo_dark
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.facebook.react.config.ReactFeatureFlags: boolean enableTextMeasureCachePerShadowNode
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList currentKeysToTransform
com.swmansion.reanimated.R$styleable: int[] StateListDrawableItem
com.swmansion.reanimated.R$anim: int abc_slide_in_top
com.swmansion.reanimated.R$attr: int arrowShaftLength
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElements
com.rnfs.RNFSManager: java.lang.String RNFSDocumentDirectoryPath
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListView_Menu
com.swmansion.reanimated.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.swmansion.reanimated.R$style: int Theme_Catalyst
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.swmansion.reanimated.R$drawable: int abc_btn_check_to_on_mtrl_015
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.swmansion.reanimated.R$id: int message
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.swmansion.reanimated.R$attr: int windowFixedWidthMajor
com.swmansion.reanimated.R$styleable: int MenuGroup_android_menuCategory
com.swmansion.reanimated.R$attr: int retryImage
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.swmansion.reanimated.R$id: int search_voice_btn
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.swmansion.reanimated.R$styleable: int MenuView_android_verticalDivider
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
com.swmansion.reanimated.R$styleable: int ActionBar_homeAsUpIndicator
com.swmansion.reanimated.R$styleable: int SearchView_defaultQueryHint
com.swmansion.reanimated.R$string: int state_unselected_description
com.swmansion.reanimated.R$drawable: int abc_text_select_handle_left_mtrl
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.swmansion.reanimated.R$id: int action_bar_spinner
com.swmansion.reanimated.R$attr: int buttonGravity
com.swmansion.reanimated.R$drawable: int btn_radio_on_mtrl
com.swmansion.reanimated.R$styleable: int AlertDialog_listItemLayout
com.swmansion.reanimated.R$styleable: int ActionMode_closeItemLayout
com.swmansion.reanimated.R$attr: int actionBarTabTextStyle
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.swmansion.reanimated.sensor.ReanimatedSensorListener: com.swmansion.reanimated.nativeProxy.SensorSetter setter
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
com.swmansion.reanimated.R$styleable: int MenuItem_android_menuCategory
com.swmansion.reanimated.R$attr: int iconifiedByDefault
com.swmansion.reanimated.R$attr: int paddingTopNoTitle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dialogCornerRadius
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.swmansion.reanimated.R$attr: int actionBarSize
com.swmansion.reanimated.R$attr: int roundTopLeft
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginBottom
com.swmansion.reanimated.R$color: int material_deep_teal_200
com.swmansion.reanimated.R$styleable: int SearchView_autoShowKeyboard
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.swmansion.reanimated.R$style: int Animation_AppCompat_Tooltip
com.swmansion.reanimated.R$styleable: int Fragment_android_name
com.swmansion.reanimated.R$attr: int closeItemLayout
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Base_V26_Theme_AppCompat
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorControlNormal
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.swmansion.reanimated.R$attr: int track
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopRight
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
com.swmansion.reanimated.R$string: int catalyst_debug_open
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.lang.ref.WeakReference mWeakNativeViewHierarchyManager
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_placeholderImage
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View mTransitionContainer
com.swmansion.reanimated.R$styleable: int GradientColor_android_startX
com.swmansion.reanimated.R$attr: int barLength
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: int nextListenerId
com.swmansion.reanimated.R$styleable: int SearchView_android_maxWidth
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.swmansion.reanimated.R$attr: int drawableTintMode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.swmansion.reanimated.R$drawable: int tooltip_frame_dark
com.swmansion.reanimated.R$styleable: int MenuItem_showAsAction
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int notification_action_color_filter
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Large
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.swmansion.reanimated.R$attr: int navigationContentDescription
com.swmansion.reanimated.R$layout: int notification_template_icon_group
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
com.swmansion.reanimated.R$attr: int menu
com.swmansion.reanimated.R$id: int chronometer
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.R$color: int secondary_text_disabled_material_light
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_EditText
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.swmansion.reanimated.R$attr: int windowFixedHeightMinor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION_PROGRESS
com.swmansion.reanimated.R$drawable: int abc_btn_default_mtrl_shape
com.swmansion.reanimated.R$dimen: int abc_dialog_min_width_minor
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.swmansion.reanimated.R$id: int rn_redbox_report_button
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int transition_transform
com.swmansion.reanimated.R$string: int summary_description
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap cleanerCallback
com.swmansion.reanimated.sensor.ReanimatedSensorType: int type
com.rnfs.RNFSManager: java.lang.String MODULE_NAME
com.facebook.react.config.ReactFeatureFlags: boolean enableCppPropsIteratorSetter
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopLeft
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ACCELEROMETER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.swmansion.reanimated.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
com.swmansion.reanimated.R$attr: int theme
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELAY_MS
com.swmansion.reanimated.R$styleable: int Fragment_android_tag
com.swmansion.reanimated.R$dimen: int abc_text_size_menu_material
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textColor
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.swmansion.reanimated.R$attr: int trackTint
com.swmansion.reanimated.R$string: int abc_searchview_description_search
com.swmansion.reanimated.R$string: int state_collapsed_description
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.swmansion.reanimated.R$attr: int thickness
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mModuleCleanupStarted
com.swmansion.reanimated.R$attr: int drawableTopCompat
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType MAGNETIC_FIELD
com.swmansion.reanimated.R$style: int SpinnerDatePickerStyle
com.swmansion.reanimated.R$styleable: int AppCompatTextView_textAllCaps
com.swmansion.reanimated.R$attr: int actionModeSplitBackground
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_TabView
com.swmansion.reanimated.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.swmansion.reanimated.R$attr: int progressBarImage
com.swmansion.reanimated.R$color: int bright_foreground_material_dark
com.swmansion.reanimated.R$styleable: int Toolbar_android_minHeight
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState OPENING
com.swmansion.reanimated.R$styleable: int GradientColor_android_startY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.List transformMatrix
com.swmansion.reanimated.R$id: int accessibility_custom_action_9
com.swmansion.reanimated.R$styleable: int AppCompatTheme_ratingBarStyle
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.swmansion.reanimated.R$layout: int autofill_inline_suggestion
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_progressBarImage
com.swmansion.reanimated.R$dimen: int abc_disabled_alpha_material_light
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.swmansion.reanimated.R$drawable: int abc_textfield_activated_mtrl_alpha
com.swmansion.reanimated.R$styleable: int MenuItem_actionLayout
com.rnfs.RNFSManager: java.lang.String RNFSCachesDirectoryPath
com.swmansion.reanimated.R$attr: int textAppearanceListItemSmall
com.swmansion.reanimated.R$attr: int listChoiceIndicatorMultipleAnimated
com.swmansion.reanimated.R$dimen: int abc_config_prefDialogWidth
com.swmansion.reanimated.R$id: int src_atop
com.swmansion.reanimated.R$string: int menuitem_description
com.swmansion.reanimated.R$id: int search_mag_icon
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Button
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Small
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_failureImage
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.swmansion.reanimated.R$drawable: int abc_tab_indicator_material
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
com.swmansion.reanimated.R$styleable: int StateListDrawableItem_android_drawable
com.swmansion.reanimated.R$id: int transition_current_scene
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundingBorderWidth
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.swmansion.reanimated.R$attr: int placeholderImageScaleType
com.swmansion.reanimated.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.swmansion.reanimated.R$attr: int showDividers
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Caption
com.swmansion.reanimated.R$styleable: int ActionBar_divider
com.swmansion.reanimated.R$styleable: int AlertDialog_singleChoiceItemLayout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.swmansion.reanimated.R$styleable: int AppCompatTheme_editTextStyle
com.swmansion.reanimated.R$color: int primary_dark_material_light
com.swmansion.reanimated.R$color: int background_floating_material_dark
com.swmansion.reanimated.R$id: int screen
com.swmansion.reanimated.R$bool: int abc_action_bar_embed_tabs
com.swmansion.reanimated.R$styleable: int FragmentContainerView_android_tag
com.swmansion.reanimated.R$id: int accessibility_custom_action_14
com.swmansion.reanimated.R$styleable: int PopupWindow_android_popupAnimationStyle
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.react.bridge.ReactApplicationContext mContext
com.swmansion.reanimated.R$attr: int fontFamily
com.swmansion.reanimated.R$id: int unchecked
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int async
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionTitle
com.swmansion.reanimated.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.swmansion.reanimated.R$styleable: int AppCompatImageView_srcCompat
com.swmansion.reanimated.R$attr: int dividerVertical
com.swmansion.reanimated.R$layout: int abc_alert_dialog_button_bar_material
com.swmansion.reanimated.R$attr: int tooltipText
com.swmansion.reanimated.R$color: int switch_thumb_normal_material_light
com.swmansion.reanimated.R$id: int action_bar_activity_content
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarStyle
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ButtonBar
com.swmansion.reanimated.R$dimen: int abc_floating_window_z
com.swmansion.reanimated.R$color: int abc_secondary_text_material_dark
com.swmansion.reanimated.R$id: int normal
com.swmansion.reanimated.R$color: int primary_material_dark
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.swmansion.reanimated.R$id: int uniform
com.swmansion.reanimated.R$styleable: int GradientColor_android_gradientRadius
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.swmansion.reanimated.R$color: int material_grey_800
com.RNFetchBlob.RNFetchBlob: boolean ActionViewVisible
com.swmansion.reanimated.R$id: int action_bar
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.swmansion.reanimated.R$attr: int buttonStyle
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.swmansion.reanimated.R$attr: int colorButtonNormal
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_AVG_TOUCHES
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.swmansion.reanimated.R$styleable: int[] AppCompatTheme
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.swmansion.reanimated.R$attr: int logo
com.swmansion.reanimated.R$color: int material_blue_grey_800
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderFetchTimeout
com.swmansion.reanimated.R$id: int home
com.swmansion.reanimated.R$string: int abc_menu_meta_shortcut_label
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Toolbar
com.swmansion.reanimated.R$styleable: int View_theme
com.swmansion.reanimated.R$string: int catalyst_sample_profiler_enable
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundingBorderColor
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
com.swmansion.reanimated.R$dimen: int tooltip_y_offset_non_touch
com.swmansion.reanimated.R$id: int listMode
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.swmansion.reanimated.R$drawable: int tooltip_frame_light
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_Y
com.swmansion.reanimated.R$styleable: int MenuGroup_android_checkableBehavior
com.swmansion.reanimated.R$string: int state_off_description
com.swmansion.reanimated.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.swmansion.reanimated.R$attr: int collapseIcon
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_enterFadeDuration
com.swmansion.reanimated.R$attr: int thumbTextPadding
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactContext mContext
com.swmansion.reanimated.R$id: int default_activity_button
com.swmansion.reanimated.R$string: int catalyst_debug_connecting
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String NAME
com.swmansion.reanimated.R$attr: int contentInsetRight
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_START
com.swmansion.reanimated.R$dimen: int abc_action_bar_stacked_max_height
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.dylanvann.fastimage.FastImageViewManager: java.lang.String REACT_ON_PROGRESS_EVENT
com.swmansion.reanimated.R$styleable: int AppCompatTextView_emojiCompatEnabled
com.swmansion.reanimated.R$attr: int panelBackground
com.swmansion.reanimated.R$id: int right_icon
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.R$attr: int buttonCompat
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.swmansion.reanimated.R$dimen: int abc_text_size_title_material
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarDivider
com.swmansion.reanimated.R$styleable: int SearchView_searchIcon
com.facebook.react.fabric.interop.InteropEventEmitter: com.facebook.react.bridge.ReactContext mReactContext
com.swmansion.reanimated.R$styleable: int ActionBar_background
com.swmansion.reanimated.R$color: int button_material_dark
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Light
com.swmansion.reanimated.NativeProxy$1: java.lang.ref.WeakReference val$weakLayoutAnimations
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.swmansion.reanimated.R$dimen: int compat_button_inset_vertical_material
com.swmansion.reanimated.R$attr: int showTitle
com.facebook.react.uimanager.NativeViewHierarchyManager: android.graphics.RectF mBoundingBox
com.swmansion.reanimated.R$layout: int redbox_view
com.swmansion.reanimated.R$styleable: int Toolbar_title
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.swmansion.reanimated.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.swmansion.reanimated.R$attr: int windowMinWidthMinor
com.swmansion.reanimated.R$attr: int actionModeTheme
com.swmansion.reanimated.R$id: int fitBottomStart
com.swmansion.reanimated.R$dimen: int abc_edit_text_inset_horizontal_material
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_TOP
com.swmansion.reanimated.R$id: int scrollIndicatorDown
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.swmansion.reanimated.R$attr: int spinBars
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorListener listener
com.swmansion.reanimated.R$styleable: int MenuGroup_android_visible
com.swmansion.reanimated.R$styleable: int Toolbar_navigationIcon
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.swmansion.reanimated.R$dimen: int abc_button_padding_vertical_material
com.swmansion.reanimated.R$id: int accessibility_custom_action_17
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_gravity
com.swmansion.reanimated.R$drawable: int abc_tab_indicator_mtrl_alpha
com.swmansion.reanimated.R$attr: int progressBarPadding
com.swmansion.reanimated.R$attr: int paddingBottomNoButtons
com.swmansion.reanimated.R$attr: int windowActionBar
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SearchView
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Widget_AppCompat_SeekBar
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Large_Inverse
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.BatchEventDispatchedListener mBatchEventDispatchedListener
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopRight
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.Sensor sensor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.swmansion.reanimated.R$dimen: int tooltip_margin
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.swmansion.reanimated.R$style: int Theme_FullScreenDialogAnimatedSlide
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_divider
com.swmansion.reanimated.R$layout: int select_dialog_singlechoice_material
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Small
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_retryImageScaleType
com.swmansion.reanimated.R$color: int dim_foreground_disabled_material_dark
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundAsCircle
com.swmansion.reanimated.R$attr: int overlapAnchor
com.swmansion.reanimated.R$id: int ghost_view_holder
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.swmansion.reanimated.R$color: int abc_search_url_text_normal
com.rnfs.RNFSManager: java.lang.String RNFSFileTypeDirectory
com.facebook.react.config.ReactFeatureFlags: boolean unstable_useFabricInterop
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.swmansion.reanimated.R$drawable: int notification_bg_normal
com.swmansion.reanimated.NodesManager$3: com.swmansion.reanimated.NodesManager this$0
com.swmansion.reanimated.R$attr: int arrowHeadLength
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory[] handlerFactories
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int ActionBar_displayOptions
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: java.lang.Runnable mRunnable
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.swmansion.reanimated.R$attr: int hideOnContentScroll
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mViewTagsToHide
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.swmansion.reanimated.R$style: int Base_V22_Theme_AppCompat_Light
com.swmansion.reanimated.R$dimen: int abc_dialog_corner_radius_material
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionStartIconStyle
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.swmansion.reanimated.R$dimen: int abc_text_size_menu_header_material
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.swmansion.reanimated.R$drawable: int abc_seekbar_tick_mark_material
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GYROSCOPE
com.rnfs.RNFSManager: java.lang.String RNFSExternalDirectoryPath
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Menu
com.swmansion.reanimated.R$attr: int checkMarkTintMode
com.swmansion.reanimated.R$dimen: int abc_text_size_small_material
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.swmansion.reanimated.R$dimen: int compat_control_corner_material
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Borderless
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_PopupWindow
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
com.swmansion.reanimated.R$string: int toolbar_description
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.swmansion.reanimated.R$dimen: int abc_control_corner_material
com.swmansion.reanimated.R$layout: int fps_view
com.swmansion.reanimated.NodesManager: java.util.Queue mOperationsInBatch
com.swmansion.reanimated.R$attr: int colorBackgroundFloating
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.swmansion.reanimated.R$drawable: int abc_ic_voice_search_api_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: boolean isStatusBarTranslucent
com.swmansion.reanimated.R$attr: int fontWeight
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.swmansion.reanimated.R$dimen: int notification_action_text_size
com.swmansion.reanimated.R$color: int tooltip_background_light
com.swmansion.reanimated.R$anim: int catalyst_slide_up
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.swmansion.reanimated.R$attr: int lStar
com.swmansion.reanimated.R$anim: int abc_fade_in
com.swmansion.reanimated.R$styleable: int ActionBar_height
com.swmansion.reanimated.R$id: int decor_content_parent
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginTop
com.swmansion.reanimated.R$layout: int abc_action_mode_bar
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.swmansion.reanimated.R$id: int tag_screen_reader_focusable
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
com.swmansion.reanimated.R$layout: int abc_search_dropdown_item_icons_2line
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_Y
com.swmansion.reanimated.R$anim: int catalyst_push_up_out
com.swmansion.reanimated.R$drawable: int abc_list_pressed_holo_light
com.swmansion.reanimated.R$string: int state_on_description
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.swmansion.reanimated.R$drawable: int abc_textfield_default_mtrl_alpha
com.swmansion.reanimated.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.swmansion.reanimated.R$styleable: int TextAppearance_android_typeface
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.swmansion.reanimated.R$string: int catalyst_reload
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.swmansion.reanimated.R$integer: int config_tooltipAnimTime
com.swmansion.reanimated.R$dimen: int tooltip_corner_radius
com.swmansion.reanimated.R$styleable: int ActionBar_homeLayout
com.swmansion.reanimated.R$attr: int roundedCornerRadius
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
com.swmansion.reanimated.R$attr: int textAppearanceSearchResultSubtitle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_Y
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
com.swmansion.reanimated.R$attr: int titleTextAppearance
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap payload
com.swmansion.reanimated.R$styleable: int MenuView_android_itemTextAppearance
com.swmansion.reanimated.R$attr: int fontProviderAuthority
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetEndWithActions
com.swmansion.reanimated.R$color: int abc_tint_seek_thumb
com.swmansion.reanimated.R$id: int action_mode_bar_stub
com.swmansion.reanimated.R$style: int Animation_Catalyst_RedBox
com.swmansion.reanimated.R$dimen: int highlight_alpha_material_dark
com.swmansion.reanimated.R$anim: int abc_popup_enter
com.swmansion.reanimated.R$id: int tag_unhandled_key_listeners
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData hybridData
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String NAME
com.swmansion.reanimated.R$attr: int actionLayout
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.swmansion.reanimated.R$id: int tag_accessibility_pane_title
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mModuleCleanupLock
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String SHARED_PREFERENCES_PREFIX
com.swmansion.reanimated.R$styleable: int[] ListPopupWindow
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.swmansion.reanimated.R$id: int accessibility_custom_action_6
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button
com.swmansion.reanimated.R$attr: int tickMarkTintMode
com.swmansion.reanimated.R$color: int abc_color_highlight_material
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP
com.swmansion.reanimated.R$attr: int queryHint
com.swmansion.reanimated.R$dimen: int abc_text_size_button_material
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.swmansion.reanimated.R$id: int textSpacerNoTitle
com.swmansion.reanimated.R$attr: int windowNoTitle
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String NAME
com.swmansion.reanimated.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.swmansion.reanimated.CopiedEvent: int targetTag
com.swmansion.reanimated.R$id: int action_container
com.swmansion.reanimated.R$string: int abc_capital_off
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_loading_from_url
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION
com.swmansion.reanimated.R$id: int search_bar
com.swmansion.reanimated.R$attr: int subtitleTextStyle
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionButton_Overflow
com.swmansion.reanimated.R$styleable: int GradientColor_android_endX
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.swmansion.reanimated.R$dimen: int compat_button_inset_horizontal_material
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_actualImageResource
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String cppVersion
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int LAYOUT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.swmansion.reanimated.R$styleable: int SwitchCompat_splitTrack
com.swmansion.reanimated.R$id: int accessibility_custom_action_7
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.swmansion.reanimated.R$attr: int autoSizePresetSizes
com.swmansion.reanimated.R$dimen: int abc_list_item_height_small_material
com.facebook.react.config.ReactFeatureFlags: boolean reduceDeleteCreateMutation
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String NAME
com.swmansion.reanimated.R$dimen: int compat_button_padding_vertical_material
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MAX_DIST
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.swmansion.reanimated.R$dimen: int abc_dropdownitem_text_padding_left
com.swmansion.reanimated.BuildConfig: java.lang.String BUILD_TYPE
com.swmansion.reanimated.R$styleable: int SearchView_android_imeOptions
com.swmansion.reanimated.R$dimen: int abc_list_item_height_large_material
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.swmansion.reanimated.R$attr: int preserveIconSpacing
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Medium
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View view
com.swmansion.reanimated.R$dimen: int abc_seekbar_track_progress_height_material
com.swmansion.reanimated.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.swmansion.reanimated.R$styleable: int[] AppCompatTextHelper
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_progressBarAutoRotateInterval
com.swmansion.reanimated.R$drawable: int notification_icon_background
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderAuthority
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.swmansion.reanimated.R$attr: int backgroundStacked
com.swmansion.reanimated.R$attr: int colorControlActivated
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.LinkedBlockingQueue taskQueue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.swmansion.reanimated.R$attr: int imageButtonStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.swmansion.reanimated.R$dimen: int disabled_alpha_material_dark
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.swmansion.reanimated.R$id: int parentPanel
com.swmansion.reanimated.R$styleable: int GradientColor_android_endY
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.devsupport.interfaces.DevLoadingViewManager mDevLoadingViewManager
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.swmansion.reanimated.R$attr: int windowActionBarOverlay
com.swmansion.reanimated.R$styleable: int SearchView_queryHint
com.swmansion.reanimated.R$attr: int actionBarTabBarStyle
com.swmansion.reanimated.R$styleable: int[] MenuItem
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableRightCompat
com.swmansion.reanimated.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetLeft
com.swmansion.reanimated.R$attr: int colorSwitchThumbNormal
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.swmansion.reanimated.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.swmansion.reanimated.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
com.swmansion.reanimated.R$id: int centerCrop
com.swmansion.reanimated.R$id: int tabMode
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.swmansion.reanimated.R$attr: int contentInsetStart
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Title
com.swmansion.reanimated.NodesManager: java.util.Set nativeProps
com.swmansion.reanimated.R$attr: int buttonBarButtonStyle
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetEndWithActions
com.facebook.react.bridge.ReactMarker: long sAppStartTime
com.swmansion.reanimated.R$id: int fitEnd
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_end_icon
com.swmansion.reanimated.R$attr: int actionModeCutDrawable
com.RNFetchBlob.RNFetchBlob: okhttp3.OkHttpClient mClient
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.swmansion.reanimated.R$styleable: int ActionBar_navigationMode
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
com.swmansion.reanimated.R$dimen: int notification_big_circle_margin
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.swmansion.reanimated.R$id: int view_tag_instance_handle
com.swmansion.reanimated.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.swmansion.reanimated.R$styleable: int ActionBarLayout_android_layout_gravity
com.swmansion.reanimated.R$integer: int status_bar_notification_info_maxnum
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_actualImageUri
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_barLength
com.swmansion.reanimated.R$style: int Platform_AppCompat
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.swmansion.reanimated.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_Y
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_CONTINUE_ON_SUBTREE
com.swmansion.reanimated.R$id: int rn_frame_method
com.swmansion.reanimated.R$styleable: int FontFamilyFont_fontStyle
com.swmansion.reanimated.R$attr: int borderlessButtonStyle
com.swmansion.reanimated.R$attr: int actionModeStyle
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat_Light
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.swmansion.reanimated.R$attr: int contentInsetLeft
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textStyle
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.swmansion.reanimated.R$attr: int colorPrimary
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.swmansion.reanimated.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.swmansion.reanimated.R$attr: int drawableTint
com.swmansion.reanimated.R$drawable: int abc_popup_background_mtrl_mult
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.swmansion.reanimated.R$color: int abc_tint_btn_checkable
com.swmansion.reanimated.R$string: int catalyst_open_flipper_error
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textColorLink
com.swmansion.reanimated.R$id: int tag_on_apply_window_listener
com.facebook.react.config.ReactFeatureFlags: boolean calculateTransformedFramesEnabled
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
com.swmansion.reanimated.R$styleable: int RecycleListView_paddingBottomNoButtons
com.swmansion.reanimated.R$styleable: int SwitchCompat_thumbTintMode
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.swmansion.reanimated.R$id: int pointer_events
com.swmansion.reanimated.R$drawable: int abc_list_longpressed_holo
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.swmansion.reanimated.R$style: int Widget_AppCompat_ProgressBar
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomLeft
com.swmansion.reanimated.R$drawable: int abc_list_selector_background_transition_holo_light
com.swmansion.reanimated.R$drawable: int btn_radio_off_mtrl
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
com.swmansion.reanimated.R$attr: int viewInflaterClass
com.swmansion.reanimated.R$dimen: int abc_dialog_title_divider_material
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_HEIGHT
com.swmansion.reanimated.R$anim: int abc_fade_out
com.swmansion.reanimated.R$style: int Theme_ReactNative_AppCompat_Light
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.swmansion.reanimated.R$string: int catalyst_settings
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_failureImageScaleType
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.swmansion.reanimated.R$styleable: int Spinner_android_dropDownWidth
com.swmansion.reanimated.layoutReanimation.Snapshot: float borderRadius
com.swmansion.reanimated.R$layout: int abc_alert_dialog_material
com.swmansion.reanimated.R$style: int Theme_AppCompat_CompactMenu
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String HEIGHT
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricPendingEventQueue
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.swmansion.reanimated.R$dimen: int abc_text_size_subtitle_material_toolbar
com.swmansion.reanimated.layoutReanimation.Snapshot: int originXByParent
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot sourceViewSnapshot
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListView_DropDown
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.swmansion.reanimated.R$attr: int roundTopRight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingSubviewCountMap
com.swmansion.reanimated.R$styleable: int RecycleListView_paddingTopNoTitle
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableRight
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.swmansion.reanimated.R$dimen: int abc_action_bar_default_height_material
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.swmansion.reanimated.R$color: int bright_foreground_inverse_material_light
com.swmansion.reanimated.R$id: int blocking
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Caption
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.GuardedFrameCallback mChoreographerCallback
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.swmansion.reanimated.Utils: boolean isChromeDebugger
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_WIDTH
com.swmansion.reanimated.R$attr: int actionOverflowMenuStyle
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display2
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
com.swmansion.reanimated.R$string: int catalyst_heap_capture
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String NAME
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
com.swmansion.reanimated.R$id: int contentPanel
com.swmansion.reanimated.R$id: int rn_redbox_reload_button
com.swmansion.reanimated.R$attr: int popupMenuStyle
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.swmansion.reanimated.layoutReanimation.Snapshot: int originYByParent
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.swmansion.reanimated.NodesManager$3: java.util.concurrent.Semaphore val$semaphore
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionInParentIndex
com.swmansion.reanimated.R$layout: int abc_expanded_menu_layout
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.swmansion.reanimated.R$styleable: int AppCompatTheme_toolbarStyle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_DIRECTION
com.swmansion.reanimated.R$style: int Widget_AppCompat_RatingBar_Indicator
com.swmansion.reanimated.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.swmansion.reanimated.R$attr: int spinnerStyle
com.swmansion.reanimated.R$attr: int alertDialogTheme
com.swmansion.reanimated.R$id: int react_test_id
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.swmansion.reanimated.R$id: int accessibility_custom_action_28
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListMenuView
com.swmansion.reanimated.R$anim: int catalyst_fade_out
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.swmansion.reanimated.R$attr: int roundingBorderColor
com.swmansion.reanimated.R$drawable: int abc_btn_radio_material_anim
com.swmansion.reanimated.R$attr: int radioButtonStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.swmansion.reanimated.R$attr: int alertDialogCenterButtons
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_X
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.swmansion.reanimated.R$styleable: int[] ActionBar
com.swmansion.reanimated.R$string: int abc_searchview_description_voice
com.swmansion.reanimated.R$dimen: int notification_small_icon_size_as_large
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dividerVertical
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutUpdateAnimation
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.swmansion.reanimated.R$styleable: int[] Spinner
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_NoActionBar
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetEnd
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorControlHighlight
com.swmansion.reanimated.R$styleable: int CompoundButton_buttonCompat
com.swmansion.reanimated.R$styleable: int MenuItem_android_orderInCategory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.swmansion.reanimated.R$attr: int windowFixedHeightMajor
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.swmansion.reanimated.R$attr: int autoSizeStepGranularity
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.rnfs.RNFSManager: java.lang.String RNFSPicturesDirectoryPath
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DIST
com.swmansion.reanimated.R$id: int accessibility_custom_action_18
com.swmansion.reanimated.AndroidUIScheduler$1: com.swmansion.reanimated.AndroidUIScheduler this$0
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.swmansion.reanimated.R$drawable: int abc_ic_go_search_api_material
com.swmansion.reanimated.R$styleable: int Toolbar_titleTextColor
com.swmansion.reanimated.R$dimen: int abc_button_inset_horizontal_material
com.swmansion.reanimated.R$attr: int textAppearanceSearchResultTitle
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActivityChooserView
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_viewAspectRatio
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.swmansion.reanimated.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mEnteringViewTargetValues
com.swmansion.reanimated.R$attr: int popupTheme
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mCallbacks
com.swmansion.reanimated.R$attr: int goIcon
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_placeholderImageScaleType
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.UIManagerModule mUIManager
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.LifecycleEventListener mInitialURLListener
com.swmansion.reanimated.R$style: int Theme_FullScreenDialogAnimatedFade
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.swmansion.reanimated.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Headline
com.swmansion.reanimated.R$attr: int allowStacking
com.swmansion.reanimated.R$attr: int drawableStartCompat
kotlinx.coroutines.CancelledContinuation: int _resumed
com.swmansion.reanimated.R$styleable: int[] DrawerArrowToggle
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListView_DropDown
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dropView(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.rnfs.RNFSManager: void stopUpload(int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.google.android.material.chip.Chip: float getChipEndPadding()
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType valueOf(java.lang.String)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.react.bridge.Dynamic: void recycle()
com.airbnb.lottie.value.ScaleXY: ScaleXY()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $values()
kotlin.random.Random: Random()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context,int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.text.TextLayoutManager: TextLayoutManager()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.rnfs.RNFSManager: java.lang.String getWriteAccessByAPILevel()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.RNFetchBlob.RNFetchBlob: void getSDCardDir(com.facebook.react.bridge.Promise)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void finishSharedAnimation(int)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getProfilingSettings()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.airbnb.lottie.LottieAnimationView: void setAnimation(int)
com.rnfs.RNFSManager: void setReadable(java.lang.String,java.lang.Boolean,java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.RenderMode getRenderMode()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.dylanvann.fastimage.FastImageGlideModule: FastImageGlideModule()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type[] values()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.google.android.material.button.MaterialButton: void setElevation(float)
okio.AsyncTimeout: AsyncTimeout()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void initialize()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
androidx.lifecycle.viewmodel.CreationExtras: CreationExtras()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.dylanvann.fastimage.FastImageViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
com.google.android.material.search.SearchBar: void setHint(java.lang.CharSequence)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.airbnb.lottie.LottieAnimationView: void setApplyingOpacityToLayersEnabled(boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isCreatingModule()
com.swmansion.reanimated.NodesManager: void scrollTo(int,double,double,boolean)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isLayoutAnimationEnabled()
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View findTransformedView(android.view.View)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
androidx.constraintlayout.solver.widgets.Guideline: Guideline()
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArray(org.json.JSONArray)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
okio.Buffer: Buffer()
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: ReanimatedSensorContainer(java.lang.ref.WeakReference)
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation: void execute(com.swmansion.reanimated.NodesManager)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: long getAnimationTimestamp()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.rnfs.RNFSManager: void DeleteRecursive(java.io.File)
com.dylanvann.fastimage.FastImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setReanimatedNativeHierarchyManager(com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager)
com.facebook.react.uimanager.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.turbomodule.core.TurboModuleManager$1: TurboModuleManager$1(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.animated.NativeAnimatedModule)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
androidx.lifecycle.ViewModel: ViewModel()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.reactnativecommunity.blurview.BlurViewManager: void setRadius(eightbitlab.com.blurview.BlurView,int)
com.RNFetchBlob.RNFetchBlob: void actionViewIntent(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
kotlinx.coroutines.YieldContext: YieldContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType valueOf(java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: int subscribeForKeyboardEvents(com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater,boolean)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.google.android.material.search.SearchBar: void setText(java.lang.CharSequence)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentModeEndMargin()
com.rnfs.RNFSManager: void getFSInfo(com.facebook.react.bridge.Promise)
com.bumptech.glide.load.engine.LockedResource: LockedResource()
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(android.view.View,boolean)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void removeCallbacks()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(android.view.View,int,int,int,int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
okhttp3.Cookie$Builder: Cookie$Builder()
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.airbnb.lottie.LottieAnimationView: void setFrame(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
com.facebook.react.views.textinput.ReactEditText: void setPlaceholder(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.RNFetchBlob.RNFetchBlob: void exists(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.facebook.jni.HybridData getHybridData()
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.swmansion.reanimated.NodesManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsAnimationCompat$Callback: WindowInsetsAnimationCompat$Callback(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.graphics.Point convertScreenLocationToViewCoordinates(android.graphics.Point,android.view.View)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.airbnb.lottie.model.content.ShapeData: ShapeData()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
kotlin.text.Charsets: Charsets()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void scheduleCompletionCallback(long)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean isLayoutAnimationEnabled()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void lambda$finishSharedAnimation$1(android.view.ViewParent)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType valueOf(java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.swmansion.reanimated.CopiedEvent: CopiedEvent(com.facebook.react.uimanager.events.Event)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.google.android.material.search.SearchView: void setToolbarTouchscreenBlocksFocus(boolean)
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.airbnb.lottie.LottieDrawable$OnVisibleAction: com.airbnb.lottie.LottieDrawable$OnVisibleAction valueOf(java.lang.String)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onTouchEvent(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String getName()
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: ReanimatedMessageQueueThreadBase()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
com.swmansion.reanimated.MapUtils: int getInt(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.facebook.react.modules.core.TimingModule: void initialize()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.google.android.material.search.SearchBar: java.lang.CharSequence getText()
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
androidx.core.os.CancellationSignal: CancellationSignal()
com.RNFetchBlob.RNFetchBlob: void getContentIntent(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.NativeViewHierarchyManager: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.rnfs.RNFSManager: void stopDownload(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void maybeLoadSoLibrary()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(int,long)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
kotlin.jvm.internal.Intrinsics: Intrinsics()
com.facebook.react.bridge.WritableArray: void pushNull()
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.google.android.material.chip.Chip: void setChecked(boolean)
com.swmansion.reanimated.ReactNativeUtils: float getBorderRadius(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.uimanager.NativeViewHierarchyManager: long getInstanceHandle(int)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void unsubscribeFromKeyboardEvents(int)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
com.facebook.react.TurboReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.facebook.react.bridge.CatalystInstance: void initialize()
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.facebook.react.bridge.UIManagerListener: void didMountItems(com.facebook.react.bridge.UIManager)
com.dylanvann.fastimage.FastImageViewModule: FastImageViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentModeEndMargin(int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.airbnb.lottie.parser.KeyframeParser: KeyframeParser()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.rnfs.RNFSManager: void pathForGroup(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.RNFetchBlob.RNFetchBlob: void cp(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(android.view.View,java.lang.String)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckedIconGravity(int)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.swmansion.reanimated.R$xml: R$xml()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.RNFetchBlob.RNFetchBlob: void cancelRequest(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.lugg.RNCConfig.RNCConfigModule: java.util.Map getConstants()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAppearanceSpec: void setColorScheme(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.facebook.react.bridge.DynamicFromArray: int asInt()
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.swmansion.reanimated.NodesManager: void registerEventHandler(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void destroy()
com.rnfs.RNFSManager: RNFSManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSONArguments: JSONArguments()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
com.swmansion.reanimated.AndroidUIScheduler$1: AndroidUIScheduler$1(com.swmansion.reanimated.AndroidUIScheduler)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.NativeViewHierarchyManager: int getRootViewNum()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.airbnb.lottie.LottieAnimationView: int getFrame()
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructSetChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.facebook.react.bridge.interop.InteropModuleRegistry: void registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.react.bridge.Arguments: Arguments()
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.views.scroll.ReactScrollView: void setContentOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.rnfs.RNFSManager: void scanFile(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManager: void maybeLoadSoLibrary()
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.airbnb.lottie.LottieAnimationView: void setImageResource(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.google.android.material.search.SearchBar: void setNavigationIconDecorative(boolean)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.swmansion.gesturehandler.core.GestureHandler: GestureHandler()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
okhttp3.internal.http2.Http2: Http2()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.rnfs.RNFSManager: java.io.InputStream getInputStream(java.lang.String)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean shouldAnimateLayout(android.view.View)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,int,java.util.Map)
com.facebook.react.uimanager.NativeViewHierarchyManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void updateProps(int,java.util.Map)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.airbnb.lottie.LottieAnimationView: void setRepeatMode(int)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: TurboModuleManager$ModuleHolder()
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.google.android.material.search.SearchBar: void setHint(int)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.dylanvann.fastimage.GlideOptions: GlideOptions()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.swmansion.reanimated.AndroidUIScheduler: AndroidUIScheduler(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.google.android.material.search.SearchView: void setTransitionState(com.google.android.material.search.SearchView$TransitionState)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(com.swmansion.rnscreens.Screen,boolean)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: ChoreographerCompat$FrameCallback()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
okio.Options$Companion: Options$Companion()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.RNFetchBlob.RNFetchBlob: java.lang.String getName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.bumptech.glide.util.MultiClassKey: MultiClassKey()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setEnableMergePaths(com.airbnb.lottie.LottieAnimationView,boolean)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] $values()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.google.android.material.search.SearchView: void setText(int)
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void maybeRestartAnimationWithNewLayout(android.view.View)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.facebook.react.uimanager.events.PointerEvent: PointerEvent()
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(android.view.View,float)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.swmansion.reanimated.R$dimen: R$dimen()
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void startAnimation(int,int,java.util.HashMap)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.google.android.material.chip.Chip: void setMaxLines(int)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.rnfs.RNFSManager: void hash(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.facebook.react.uimanager.ViewManager: void trimMemory()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
androidx.appcompat.app.AppLocalesMetadataHolderService: AppLocalesMetadataHolderService()
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.swmansion.gesturehandler.react.RNGestureHandlerStateChangeEvent: RNGestureHandlerStateChangeEvent()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForNativeAnimatedEvent(com.swmansion.gesturehandler.react.RNGestureHandlerEvent)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onStateChange(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.facebook.react.perflogger.NativeModulePerfLogger: NativeModulePerfLogger()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map getReactModuleInfos()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.rnfs.RNFSManager)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: LayoutShadowNode()
com.facebook.react.uimanager.LayoutShadowNode: void setGap(float)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType valueOf(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.swmansion.reanimated.NativeProxy$1: void clearAnimationConfig(int)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.dylanvann.fastimage.FastImageViewManager: void setTintColor(com.dylanvann.fastimage.FastImageViewWithUrl,java.lang.Integer)
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String getName()
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.airbnb.lottie.LottieAnimationView: void setDefaultFontFileExtension(java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.ViewGroup)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getProfilingSettings()
okhttp3.OkHttpClient: OkHttpClient()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findStack(android.view.View)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void updateLayout(int,int,int,int,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.reactnativecommunity.blurview.BlurViewManager: BlurViewManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.swmansion.reanimated.NativeProxy$1: NativeProxy$1(java.lang.ref.WeakReference)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
okhttp3.Cache$Companion: Cache$Companion()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.google.android.material.search.SearchBar: void setSubtitle(java.lang.CharSequence)
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeDropAncestors(android.view.View)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setColorFilters(com.airbnb.lottie.LottieAnimationView,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.View,int)
com.swmansion.reanimated.sensor.ReanimatedSensorType: ReanimatedSensorType(java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: ReanimatedSensorListener(com.swmansion.reanimated.nativeProxy.SensorSetter,double,android.view.Display)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.bridge.ReactContext: void initializeInteropModules()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean shouldReturnInteropModule(java.lang.Class)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.google.android.material.search.SearchBar: void setElevation(float)
com.facebook.react.modules.core.ReactChoreographer: ReactChoreographer()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void maybeInit()
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.swmansion.reanimated.AndroidUIScheduler$2: void runGuarded()
com.swmansion.gesturehandler.react.RNGestureHandlerEvent: RNGestureHandlerEvent()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void makeSnapshot(android.view.View)
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.rnfs.RNFSManager: void copyInputStream(java.io.InputStream,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.RNFetchBlob.RNFetchBlob: void scanFile(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.google.android.material.button.MaterialButton: int getTextHeight()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String getName()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.View,int)
com.bumptech.glide.TransitionOptions: TransitionOptions()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: void run(android.view.View)
com.RNFetchBlob.RNFetchBlob: void createFileASCII(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.rnfs.RNFSManager: void copyFileRes(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.facebook.react.uimanager.NativeViewHierarchyManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String getName()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
com.rnfs.RNFSManager: void existsAssets(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.swmansion.reanimated.Utils: java.util.Map processMapping(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setConsolePatchSettings(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int findPrecedingViewTagForTransition(int)
com.dylanvann.fastimage.FastImageCacheControl: com.dylanvann.fastimage.FastImageCacheControl valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.emoji2.text.EmojiCompat$InitCallback: EmojiCompat$InitCallback()
com.facebook.react.modules.core.TimingModule: void invalidate()
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.bridge.NativeModule: void initialize()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onStateChange(com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.airbnb.lottie.AsyncUpdates: com.airbnb.lottie.AsyncUpdates[] values()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.google.android.material.sidesheet.SideSheetCallback: SideSheetCallback()
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean hasAnimationForTag(int,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
com.facebook.react.fabric.ReactNativeConfig: long getInt64(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.google.android.material.search.SearchBar: android.widget.TextView getTextView()
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
androidx.core.graphics.PaintCompat$Api29Impl: void setBlendMode(android.graphics.Paint,java.lang.Object)
com.JetSetGoo.MainApplication: MainApplication()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String getName()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.airbnb.lottie.LottieAnimationView: void setMinFrame(int)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getJavaModule(java.lang.String)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: void initializeInteropModules(com.facebook.react.bridge.ReactContext)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType valueOf(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: TraceUpdateOverlayManager()
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
com.swmansion.reanimated.layoutReanimation.Snapshot: void addCurrentConfig(java.util.HashMap)
com.facebook.react.TurboReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.swmansion.gesturehandler.core.FlingGestureHandler: FlingGestureHandler()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int findPrecedingViewTagForTransition(int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type valueOf(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo()
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.swmansion.gesturehandler.core.ManualGestureHandler: ManualGestureHandler()
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isDoneCreatingModule()
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: DiskCacheWriteLocker$WriteLock()
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.RNFetchBlob.RNFetchBlob: RNFetchBlob(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.rnfs.RNFSManager: void write(java.lang.String,java.lang.String,int,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
com.rnfs.RNFSManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.soloader.nativeloader.NativeLoader: NativeLoader()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.bumptech.glide.gifdecoder.GifFrame: GifFrame()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.constraintlayout.solver.widgets.Barrier: Barrier()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.rnfs.RNFSManager: void addListener(java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.lang.String getName()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: ReaLayoutAnimator(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.facebook.jni.CppException: CppException(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.rnfs.Uploader: Uploader()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.facebook.react.uimanager.ReanimatedUIManager: void removeSubviewsFromContainerWithID(int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
com.swmansion.reanimated.ReaCompatibility: ReaCompatibility(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.rnfs.UploadParams: UploadParams()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setProgress(com.airbnb.lottie.LottieAnimationView,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.bumptech.glide.integration.okhttp3.OkHttpGlideModule: OkHttpGlideModule()
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadSoLibrary()
com.facebook.react.views.text.TextLayoutManagerMapBuffer: TextLayoutManagerMapBuffer()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean shouldAnimateExiting(int,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.facebook.react.uimanager.UIManagerModule: void initialize()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.swmansion.reanimated.Utils: java.lang.String simplifyStringNumbersList(java.lang.String)
com.rnfs.RNFSManager: void touch(java.lang.String,double,double,com.facebook.react.bridge.Promise)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.airbnb.lottie.LottieAnimationView: void setTextDelegate(com.airbnb.lottie.TextDelegate)
com.facebook.react.devsupport.JSDebuggerWebSocketClient: JSDebuggerWebSocketClient()
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
com.RNFetchBlob.RNFetchBlobReq$RequestType: com.RNFetchBlob.RNFetchBlobReq$RequestType valueOf(java.lang.String)
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.widget.Barrier: void setType(int)
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void startCreatingModule()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setTextFilters(com.airbnb.lottie.LottieAnimationView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
androidx.startup.InitializationProvider: InitializationProvider()
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void createViewInstance$lambda-0(com.airbnb.lottie.LottieAnimationView,java.lang.Throwable)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] values()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.hermes.intl.LocaleIdentifier: LocaleIdentifier()
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
com.facebook.react.bridge.DimensionPropConverter: DimensionPropConverter()
com.RNFetchBlob.RNFetchBlobReq$RequestType: com.RNFetchBlob.RNFetchBlobReq$RequestType[] values()
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.airbnb.lottie.LottieAnimationView: void setFallbackResource(int)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.swmansion.reanimated.R$anim: R$anim()
com.swmansion.reanimated.ReaCompatibility: void registerFabricEventListener(com.swmansion.reanimated.NodesManager)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.swmansion.reanimated.NativeProxy$1: void checkDuplicateSharedTag(int,int)
com.facebook.react.ReactRootView: int getUIManagerType()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIsAccessibilityLink(java.lang.String)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
com.google.android.material.search.SearchView: void setMenuItemsAnimated(boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.google.android.material.bottomappbar.BottomAppBar: int getMenuAlignmentMode()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.swmansion.reanimated.sensor.ReanimatedSensor: boolean initialize()
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.RNFetchBlob.RNFetchBlob: void enableUploadProgressReport(java.lang.String,int,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.swmansion.reanimated.nativeProxy.SensorSetter: SensorSetter(com.facebook.jni.HybridData)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.swmansion.reanimated.NodesManager: void onHostPause()
com.swmansion.reanimated.sensor.ReanimatedSensor: ReanimatedSensor(java.lang.ref.WeakReference,com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: void setProfilingSettings(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: java.lang.String getName()
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.android.material.search.SearchBar: int getMenuResId()
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.google.android.material.search.SearchView: float getOverlayElevation()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.RNFetchBlob.RNFetchBlob: void writeArrayChunk(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
com.dylanvann.fastimage.FastImageViewManager: void setDefaultSource(com.dylanvann.fastimage.FastImageViewWithUrl,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.react.bridge.ReactContext$1: void run()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.facebook.react.views.scroll.ReactScrollViewManager: void setIsInvertedVirtualizedList(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.RNFetchBlob.RNFetchBlob: void writeFileArray(java.lang.String,com.facebook.react.bridge.ReadableArray,boolean,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addBasicConfig(java.util.HashMap)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: void addTurboModuleManagerDelegate(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void reset()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.dylanvann.fastimage.FastImageViewModule: java.lang.String getName()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setupTransitionContainer()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.google.android.material.search.SearchBar: float getCornerSize()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityLinks$AccessibleLink: ReactAccessibilityDelegate$AccessibilityLinks$AccessibleLink()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int registerSensor(int,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.swmansion.reanimated.NodesManager: void onHostResume()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.ReanimatedUIManager: void replaceExistingNonRootView(int,int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.rnfs.RNFSManager: void existsRes(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: DebugControllerOverlayDrawable()
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.facebook.react.bridge.ReactMarker: void setAppStartTime(long)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
com.bumptech.glide.request.RequestOptions: RequestOptions()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void registerExitingAncestors(android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode()
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.swmansion.gesturehandler.core.TapGestureHandler: TapGestureHandler()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.dylanvann.fastimage.FastImageViewModule: void clearDiskCache(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.material.card.MaterialCardView: void setProgress(float)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
com.facebook.drawee.generic.RoundingParams: RoundingParams()
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.JavaOnlyArray: int size()
com.google.android.material.search.SearchBar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType getInstanceById(int)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.jni.UnknownCppException: UnknownCppException()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.uimanager.NativeViewHierarchyManager: void computeBoundingBox(android.view.View,int[])
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps: GlideBuilder$EnableImageDecoderForBitmaps()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean checkIfTopScreenHasHeader(android.view.ViewGroup)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
com.airbnb.lottie.LottieAnimationView: void setCacheComposition(boolean)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.bridge.interop.InteropModuleRegistry: com.facebook.react.bridge.JavaScriptModule getInteropModule(java.lang.Class)
com.swmansion.reanimated.R$integer: R$integer()
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
androidx.fragment.app.DialogFragment: DialogFragment()
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: java.lang.String getConsolePatchSettings()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void checkDuplicateSharedTag(android.view.View)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.NodesManager$OnAnimationFrame: void onAnimationFrame(double)
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void installJSIBindings()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void onCatalystInstanceDestroy()
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.bumptech.glide.util.Util: Util()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String getName()
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.facebook.react.views.text.ReactTextInlineImageShadowNode: ReactTextInlineImageShadowNode()
androidx.activity.ComponentActivity: ComponentActivity()
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy getNativeProxy()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.swmansion.reanimated.ReanimatedModule$1: ReanimatedModule$1(com.swmansion.reanimated.ReanimatedModule,java.util.ArrayList)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.dylanvann.fastimage.FastImageViewManager: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void clearAnimationConfigForTag(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void checkDuplicateSharedTag(int,int)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setCacheComposition(com.airbnb.lottie.LottieAnimationView,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.airbnb.android.react.lottie.LottieAnimationViewManager: LottieAnimationViewManager()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: NativeProxyCommon(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onTouchEvent(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
kotlinx.coroutines.NodeList: NodeList()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.bumptech.glide.util.ExceptionPassthroughInputStream: ExceptionPassthroughInputStream()
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.rnfs.RNFSManager: void writeFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
com.google.android.material.search.SearchBar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.facebook.react.bridge.ReactMarker: double getAppStartTime()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void lambda$new$0(java.lang.Exception)
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setProfilingSettings(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.swmansion.reanimated.NativeProxy$1: boolean hasAnimation(int,int)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: boolean isOnThread()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: LayoutAnimations$Types()
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.RNFetchBlob.RNFetchBlob: void closeStream(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.TurboReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.RNFetchBlob.RNFetchBlob: void unlink(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItemForInterop(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSpeed(com.airbnb.lottie.LottieAnimationView,double)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.reactnativecommunity.blurview.BlurViewManager: void setBlurEnabled(eightbitlab.com.blurview.BlurView,boolean)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.reanimated.NativeMethodsHelper: com.facebook.react.views.scroll.ReactScrollView findScrollView(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
okhttp3.RequestBody: RequestBody()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String getName()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.facebook.imagepipeline.image.CloseableImage: CloseableImage()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.RNFetchBlob.RNFetchBlob: void readStream(java.lang.String,java.lang.String,int,int,java.lang.String)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: NativeDevToolsSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification[] values()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.ReactShadowNodeImpl: ReactShadowNodeImpl()
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.RNFetchBlob.RNFetchBlob: java.util.Map getConstants()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.airbnb.lottie.LottieAnimationView: void setMaxProgress(float)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void progressLayoutAnimation(int,java.util.Map,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
com.google.android.material.search.SearchBar: void setStrokeWidth(float)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnchorMode(int)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.google.android.material.search.SearchView: int getStatusBarHeight()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.swmansion.reanimated.NodesManager: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
com.rnfs.RNFSManager: void copyFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.View)
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void cancelAnimationForTag(int)
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: KeyboardEventDataUpdater(com.facebook.jni.HybridData)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
com.dylanvann.fastimage.FastImageViewModule: void preload(com.facebook.react.bridge.ReadableArray)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void setupWindowInsets()
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.appcompat.widget.SearchView: int getInputType()
com.google.android.material.card.MaterialCardView: float getProgress()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.rnfs.RNFSManager: void readFile(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.bumptech.glide.load.model.ModelCache$ModelKey: ModelCache$ModelKey()
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.swmansion.reanimated.nativeProxy.SensorSetter: void sensorSetter(float[],int)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNewProps(java.util.Map,android.view.View,com.facebook.react.uimanager.ViewManager,com.facebook.react.uimanager.ViewManager,java.lang.Integer,boolean)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.bumptech.glide.manager.RequestManagerFragment: RequestManagerFragment()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
androidx.lifecycle.Lifecycle: Lifecycle()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: int getModuleId()
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.RNFetchBlob.RNFetchBlob: void hash(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.swmansion.reanimated.NodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.swmansion.reanimated.NodesManager: boolean isAnimationRunning()
com.airbnb.lottie.LottieAnimationView: void setOutlineMasksAndMattes(boolean)
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
com.oblador.vectoricons.VectorIconsModule: void loadFontWithFileName(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean shouldAnimateLayout(android.view.View)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForReanimated(com.facebook.react.uimanager.events.Event)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.RNFetchBlob.RNFetchBlob: void writeFile(java.lang.String,java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType[] values()
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.dylanvann.fastimage.FastImageViewManager: float getGranularityPercentage()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.facebook.drawee.components.DraweeEventTracker: DraweeEventTracker()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
kotlin.collections.IntIterator: IntIterator()
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.react.bridge.ModuleHolder: void destroy()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: int getInsetBottom()
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType: com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: SafeAreaViewShadowNode()
com.facebook.react.uimanager.NativeViewHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArrayString(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType[] values()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.rnfs.RNFSManager: void unlink(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceDotLottie(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.swmansion.reanimated.AndroidUIScheduler: void deactivate()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
com.google.android.material.card.MaterialCardView: void setRadius(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode[] values()
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.dylanvann.fastimage.FastImageViewManager: com.dylanvann.fastimage.FastImageViewWithUrl createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.swmansion.rnscreens.Screen: androidx.fragment.app.Fragment getFragment()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: ReanimatedKeyboardEventListener$WindowInsetsCallback(com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.airbnb.lottie.model.layer.TextLayer$TextSubLine: TextLayer$TextSubLine()
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.intent.IntentModule)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.rnfs.RNFSManager: int getResIdentifier(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean,boolean)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.fabric.SurfaceHandler,android.content.Context,android.view.View)
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.modules.core.TimingModule: void onHostPause()
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.util.Set convertProps(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.google.android.material.animation.MotionSpec: MotionSpec()
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.google.android.material.bottomappbar.BottomAppBar: void setMenuAlignmentMode(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.Screen: void setFragmentWrapper(com.swmansion.rnscreens.ScreenFragmentWrapper)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: LayoutAnimationController()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toBasicMap()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unsubscribeFromKeyboardEvents(int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.facebook.react.views.text.TextInlineImageSpan: TextInlineImageSpan()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.google.android.material.button.MaterialButton: int getInsetTop()
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(com.swmansion.rnscreens.Screen,float)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.dylanvann.fastimage.FastImageViewManager: void onDropViewInstance(com.dylanvann.fastimage.FastImageViewWithUrl)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData getHybridData()
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.RNFetchBlob.RNFetchBlob: void enableProgressReport(java.lang.String,int,int)
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
com.facebook.react.uimanager.events.Event: Event()
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData initHybrid()
com.dylanvann.fastimage.FastImageViewManager: android.app.Activity getActivityFromContext(android.content.Context)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean isLayoutAnimationEnabled()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.dylanvann.fastimage.FastImageViewManager: boolean isActivityDestroyed(android.app.Activity)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.swmansion.reanimated.Utils: int[] processIntArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: androidx.core.view.WindowInsetsCompat lambda$setupWindowInsets$0(android.view.View,android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.RNFetchBlob.RNFetchBlob: void removeSession(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean getIsReducedMotion()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void setUpCallbacks()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory findFactoryForHandler(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
com.google.android.material.chip.Chip: float getChipMinHeight()
com.airbnb.lottie.LottieAnimationView: void setRenderMode(com.airbnb.lottie.RenderMode)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getName()
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.rnfs.RNFSManager: void copyFileAssets(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory: RNGestureHandlerModule$HandlerFactory()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: PlatformBitmapFactory()
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: void onCatalystInstanceDestroy()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.airbnb.lottie.LottieAnimationView: float getSpeed()
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.reactnativecommunity.blurview.BlurViewManager: void setAutoUpdate(eightbitlab.com.blurview.BlurView,boolean)
com.bumptech.glide.load.engine.DiskCacheStrategy: DiskCacheStrategy()
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void screenDidLayout()
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.AsyncUpdates getAsyncUpdates()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.google.android.material.chip.Chip: void setChipIconSize(float)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
androidx.cardview.widget.CardView: void setRadius(float)
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean checkReactFeatureFlagsConditions()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: void computeBoundingBox(android.view.View,int[])
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
okhttp3.Response$Builder: Response$Builder()
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void disableCleaningForViewTag(int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
kotlin.jvm.internal.PropertyReference: PropertyReference()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextView: int getGravityHorizontal()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
com.google.android.material.card.MaterialCardView: float getRadius()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.transition.TransitionValues: TransitionValues()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: int lambda$sortViewsByTags$0(android.view.View,android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.airbnb.lottie.LottieAnimationView: void setAsyncUpdates(com.airbnb.lottie.AsyncUpdates)
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
com.swmansion.reanimated.MapUtils: MapUtils()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String getName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.R$id: R$id()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.bridge.Dynamic: double asDouble()
com.swmansion.reanimated.NativeProxy: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder createNativeMethodsHolder(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
androidx.constraintlayout.widget.Barrier: int getMargin()
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String getName()
com.swmansion.gesturehandler.react.RNGestureHandlerTouchEvent: RNGestureHandlerTouchEvent()
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.airbnb.lottie.LottieAnimationView: float getMinFrame()
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.View,android.view.View,int)
com.swmansion.reanimated.NativeProxy$1: void startAnimation(int,int,java.util.HashMap)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.RNFetchBlob.RNFetchBlob: void readFile(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.swmansion.reanimated.R$styleable: R$styleable()
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: AndroidInfoHelpers()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.facebook.drawee.backends.pipeline.Fresco: Fresco()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$2: TurboModuleManager$2(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.fabric.CppComponentRegistry: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
com.rnfs.DownloadParams: DownloadParams()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.facebook.react.views.text.ReactRawTextShadowNode: ReactRawTextShadowNode()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.airbnb.lottie.LottieAnimationView: void setPerformanceTrackingEnabled(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean removeOrAnimateExitRecursive(android.view.View,boolean,boolean)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
com.swmansion.reanimated.NativeProxy$1: void cancelAnimation(int)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.swmansion.reanimated.ReanimatedUIManagerFactory: ReanimatedUIManagerFactory()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.facebook.react.modules.devloading.DevLoadingModule: void hide()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
okhttp3.ResponseBody: ResponseBody()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String getName()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager: void startUpdatingOnAnimationFrame()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int subscribeForKeyboardEvents(com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater,boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.swmansion.reanimated.NativeProxy$1: int findPrecedingViewTagForTransition(int)
androidx.fragment.app.FragmentManager: FragmentManager()
okhttp3.RequestBody$Companion: RequestBody$Companion()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.google.android.material.search.SearchView: android.widget.EditText getEditText()
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.facebook.react.devsupport.LogBoxModule: void hide()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
androidx.collection.LongSparseArray: LongSparseArray()
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setAndroidUIScheduler(com.swmansion.reanimated.AndroidUIScheduler)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Inspector$Page: int getId()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void clearAnimationConfig(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$1(android.view.View,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
okhttp3.internal.http2.Settings: Settings()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.swmansion.reanimated.NodesManager: void postOnAnimation(com.swmansion.reanimated.NodesManager$OnAnimationFrame)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.swmansion.reanimated.NodesManager$1: void runGuarded()
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDirectEvent(com.facebook.react.uimanager.events.Event)
com.facebook.hermes.intl.Intl: Intl()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.dylanvann.fastimage.FastImageViewManager: void setSource(com.dylanvann.fastimage.FastImageViewWithUrl,com.facebook.react.bridge.ReadableMap)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.facebook.react.fabric.Binding: void driveCxxAnimations()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.google.android.material.search.SearchView: void setupWithSearchBar(com.google.android.material.search.SearchBar)
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType[] values()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getExportedViewConstants()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
com.swmansion.reanimated.NodesManager: void handleEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.airbnb.lottie.model.content.LBlendMode: com.airbnb.lottie.model.content.LBlendMode valueOf(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void addDevMenuOption()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setAutoPlay(com.airbnb.lottie.LottieAnimationView,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.facebook.react.bridge.JavaJSExecutor: void close()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: ReanimatedNativeHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void invalidate()
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager getReanimatedNativeHierarchyManager()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
okio.Timeout: Timeout()
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.swmansion.reanimated.CopiedEvent: int getTargetTag()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.facebook.react.uimanager.events.TouchEvent: TouchEvent()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeRegisterSharedView(android.view.View)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
com.facebook.react.turbomodule.core.TurboModuleManager$1: java.lang.Object getModule(java.lang.String)
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.google.android.material.search.SearchBar: void setOnLoadAnimationFadeInEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.rnfs.RNFSManager: void readFileAssets(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: SharedTransitionManager$SnapshotTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.google.android.material.chip.Chip: void setLines(int)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(int,com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.lifecycle.ReportFragment: ReportFragment()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.dylanvann.fastimage.FastImageCacheControl: com.dylanvann.fastimage.FastImageCacheControl[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: java.lang.Runnable getRunnable()
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void doSnapshotForTopScreenViews(android.view.ViewGroup)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
okhttp3.MediaType$Companion: MediaType$Companion()
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setImageAssetsFolder(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(int,boolean)
eightbitlab.com.blurview.RenderEffectBlur: RenderEffectBlur()
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.swmansion.reanimated.R$style: R$style()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.google.android.material.search.SearchView: void setUseWindowInsetsController(boolean)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: void keyboardEventDataUpdater(int,int)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.reactnativecommunity.blurview.BlurViewManager: void setDownsampleFactor(eightbitlab.com.blurview.BlurView,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: java.lang.String getName()
com.swmansion.reanimated.NodesManager: void onCatalystInstanceDestroy()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onViewsRemoval(int[])
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.progressbar.ProgressBarShadowNode: ProgressBarShadowNode()
kotlinx.coroutines.JobNode: JobNode()
com.facebook.jni.HybridData$Destructor: void destruct()
com.swmansion.reanimated.nativeProxy.NoopEventHandler: NoopEventHandler()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toCurrentMap()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void onAfterUpdateTransaction(com.airbnb.lottie.LottieAnimationView)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.cardview.widget.CardView: void setCardElevation(float)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.rnfs.RNFSManager: void removeListeners(java.lang.Integer)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onHandlerUpdate(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: DownsampleStrategy()
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.react.views.text.ReactStrikethroughSpan: ReactStrikethroughSpan()
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.shape.ShapePath$PathOperation: ShapePath$PathOperation()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
eightbitlab.com.blurview.BlurView: eightbitlab.com.blurview.BlurAlgorithm getBlurAlgorithm()
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.View,android.view.View,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.airbnb.lottie.model.DocumentData: DocumentData()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.facebook.react.uimanager.ReanimatedUIManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: int asInt()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String getName()
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
androidx.collection.ArrayMap: ArrayMap()
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
com.facebook.react.uimanager.GuardedFrameCallback: void doFrameGuarded(long)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.reactnativecommunity.blurview.BlurViewManager: java.lang.String getName()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.airbnb.lottie.LottieAnimationView: void setSpeed(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread()
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.google.android.material.search.SearchBar: void setDefaultScrollFlagsEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.google.android.material.search.SearchBar: java.lang.CharSequence getHint()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.swmansion.reanimated.ReanimatedModule: void onCatalystInstanceDestroy()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean getMIsHidden()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDeviceEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.soloader.SoLoader: SoLoader()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(int)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
com.google.android.material.shape.ShapePath$ShadowCompatOperation: ShapePath$ShadowCompatOperation()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.facebook.react.animated.NativeAnimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: AnimationsManager(com.facebook.react.bridge.ReactContext,com.facebook.react.uimanager.UIManagerModule)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.facebook.jni.DestructorThread$1: void run()
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.bridge.NativeModule: void invalidate()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(android.view.View,boolean)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay: void setOverlays(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.swmansion.reanimated.NodesManager: void initWithContext(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.airbnb.lottie.LottieAnimationView: float getProgress()
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.google.android.material.chip.ChipGroup: int getVisibleChipCount()
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.swmansion.reanimated.ReactNativeUtils: ReactNativeUtils()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutViewsRemoval(int[])
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsRecursive(android.view.View)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: ReactSwitchManager$ReactSwitchShadowNode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.View)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setCppVersion(java.lang.String)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String getName()
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.TurboReactPackage: TurboReactPackage()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean hasAnimationForTag(int,int)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.react.devsupport.HMRClient: void enable()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.swmansion.gesturehandler.core.PinchGestureHandler: PinchGestureHandler()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.airbnb.lottie.LottieAnimationView: void setFontAssetDelegate(com.airbnb.lottie.FontAssetDelegate)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.fabric.interop.InteropEventEmitter: void overrideEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.facebook.jni.NativeRunnable: void run()
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$0(android.view.View,int,int)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.NodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.reactnativecommunity.blurview.BlurViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.airbnb.lottie.LottieAnimationView: void setMaintainOriginalImageBounds(boolean)
com.facebook.react.bridge.Dynamic: boolean isNull()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.debug.DevSettingsModule)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutRemovedView(android.view.View)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View getTransitioningView(int)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.jni.IteratorHelper: boolean hasNext()
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.rnfs.RNFSManager: byte[] getInputStreamBytes(java.io.InputStream)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.ReactInstanceManager getReactInstanceManager(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: DoubleTapReloadRecognizer()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
com.swmansion.reanimated.MapUtils: java.lang.String getString(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.rnfs.RNFSManager: java.lang.String getOriginalFilepath(java.lang.String,boolean)
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path)
com.facebook.react.views.textinput.ReactEditText: int getGravityHorizontal()
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.airbnb.lottie.LottieAnimationView: boolean getAsyncUpdatesEnabled()
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.EventListener: EventListener()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.swmansion.reanimated.ReaCompatibility: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
okhttp3.Headers$Builder: Headers$Builder()
com.facebook.react.fabric.interop.InteropEventEmitter: InteropEventEmitter(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
com.rnfs.RNFSManager: void exists(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.swmansion.reanimated.R: R()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
com.airbnb.lottie.LottieDrawable$OnVisibleAction: com.airbnb.lottie.LottieDrawable$OnVisibleAction[] values()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.Binding: void stopSurface(int)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.facebook.common.time.MonotonicClock: long now()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.bumptech.glide.gifdecoder.GifHeaderParser: GifHeaderParser()
com.swmansion.reanimated.BuildConfig: BuildConfig()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void viewDidLayout(android.view.View)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.View)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
okio.Segment: Segment()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
com.swmansion.reanimated.NativeProxy: void performOperations()
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getEventNameResolver()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.swmansion.reanimated.NodesManager$3: void runGuarded()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getName()
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.airbnb.lottie.LottieDrawable: LottieDrawable()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
androidx.core.graphics.BlendModeUtils$Api29Impl: java.lang.Object obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.swmansion.reanimated.NodesManager$3: NodesManager$3(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,boolean,java.util.concurrent.Semaphore,java.util.Queue)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.RNFetchBlob.RNFetchBlob: void fetchBlob(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Callback)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.swmansion.reanimated.NodesManager$2: NodesManager$2(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.ReactContext)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.airbnb.lottie.utils.MeanCalculator: MeanCalculator()
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)
com.swmansion.reanimated.R$layout: R$layout()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.view.View resolveView(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.airbnb.lottie.LottieAnimationView: void setImageAssetsFolder(java.lang.String)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void updateLayout(android.view.View,com.facebook.react.uimanager.ViewManager,int,float,float,float,float,boolean)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.collection.ArraySet: ArraySet()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData initHybrid()
com.facebook.imagepipeline.systrace.FrescoSystrace: FrescoSystrace()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.google.android.material.shape.EdgeTreatment: EdgeTreatment()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.facebook.jni.HybridData: void resetNative()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler getAndroidUIScheduler()
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getName()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
com.airbnb.lottie.LottieAnimationView: void setAnimation(java.lang.String)
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.google.android.material.chip.Chip: float getChipIconSize()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.rnscreens.SearchBarManager: void setPlacement(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void reset()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void endLayoutAnimation(int,boolean)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void scrollTo(int,double,double,boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReactContext: void internal_registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.google.android.material.search.SearchView: void setSearchPrefixText(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
androidx.cardview.widget.CardView: float getMaxCardElevation()
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
com.facebook.react.animated.NativeAnimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.RNFetchBlob.RNFetchBlob: void writeStream(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Callback)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
com.rnfs.RNFSManager: java.io.OutputStream getOutputStream(java.lang.String,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.animated.NativeAnimatedModule)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.facebook.react.bridge.Dynamic: int asInt()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.VirtualLayout: VirtualLayout()
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.swmansion.rnscreens.CustomSearchView: void setText(java.lang.String)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.hermes.intl.PlatformCollatorAndroid: PlatformCollatorAndroid()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void receiveCommand(com.airbnb.lottie.LottieAnimationView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setClipToCompositionBounds(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(float)
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.google.android.material.search.SearchBar: void setText(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.airbnb.lottie.LottieAnimationView: void setUseCompositionFrameRate(boolean)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.RNFetchBlob.RNFetchBlob: void writeChunk(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.airbnb.lottie.LottieAnimationView: void setSafeMode(boolean)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.google.android.material.search.SearchView: java.lang.CharSequence getHint()
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
com.RNFetchBlob.RNFetchBlob: void df(com.facebook.react.bridge.Callback)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.GuardedFrameCallback: void doFrame(long)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.RNFetchBlob.Utils.FileProvider: FileProvider()
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean isLayoutAnimationDisabled()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.cardview.widget.CardView: float getRadius()
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
com.google.android.material.timepicker.TimeModel: TimeModel()
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.swmansion.reanimated.NodesManager$1: NodesManager$1(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTree(android.view.View,com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(com.swmansion.rnscreens.SearchBarView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.google.android.material.search.SearchBar: float getStrokeWidth()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.swmansion.reanimated.NodesManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieComposition getComposition()
com.google.android.material.search.SearchView: com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState()
okhttp3.Handshake$Companion: Handshake$Companion()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.RNFetchBlob.RNFetchBlob: void stat(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
com.rnfs.RNFSManager: void getAllExternalFilesDirs(com.facebook.react.bridge.Promise)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.RNFetchBlob.RNFetchBlobReq$ResponseFormat: com.RNFetchBlob.RNFetchBlobReq$ResponseFormat valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.rnfs.RNFSManager: void readDir(java.lang.String,com.facebook.react.bridge.Promise)
androidx.constraintlayout.widget.VirtualLayout: VirtualLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.View)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void prepareLayoutAnimations(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerHelper: UIManagerHelper()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void disableUserInteractions(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.camera.ImageStoreManager)
com.rnfs.RNFSManager: void rejectFileIsDirectory(com.facebook.react.bridge.Promise)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.swmansion.reanimated.nativeProxy.EventHandler: EventHandler(com.facebook.jni.HybridData)
com.facebook.jni.DestructorThread: DestructorThread()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
com.facebook.yoga.YogaConfigJNIBase: YogaConfigJNIBase()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.dylanvann.fastimage.FastImageViewManager: void setResizeMode(com.dylanvann.fastimage.FastImageViewWithUrl,java.lang.String)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(int)
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback: BaseTransientBottomBar$BaseCallback()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.Utils: Utils()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat[] values()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.core.content.FileProvider: FileProvider()
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.lugg.RNCConfig.RNCConfigModule: java.lang.String getName()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.layoutReanimation.SharedElement: SharedElement(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.facebook.react.TurboReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: void unregisterSensor(int)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.swmansion.rnscreens.SearchBarView: void setToolbarElementsVisibility(int)
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.swmansion.reanimated.CopiedEvent: java.lang.String getEventName()
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabled(boolean)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String getName()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.Map getConstants()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] values()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.transition.Transition: Transition()
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.rnfs.RNFSManager: android.net.Uri getFileUri(java.lang.String,boolean)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.facebook.jni.DestructorThread$Destructor: void destruct()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.swmansion.reanimated.AndroidUIScheduler: void scheduleTriggerOnUI()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void progressLayoutAnimation(int,java.util.Map,boolean)
com.google.android.material.search.SearchView: void setHint(int)
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
androidx.lifecycle.SavedStateHandle: SavedStateHandle()
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void maybeFlushUIUpdatesQueue()
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.google.android.material.chip.Chip: void setElevation(float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.dylanvann.fastimage.FastImageViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.google.android.material.search.SearchBar: float getCompatElevation()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean hasAnimation(int,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.swmansion.reanimated.NodesManager: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.airbnb.lottie.LottieAnimationView: void setFontMap(java.util.Map)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.facebook.react.modules.dialog.DialogModule: void invalidate()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
com.swmansion.reanimated.R$animator: R$animator()
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.search.SearchBar: void setStrokeColor(int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.airbnb.lottie.model.animatable.AnimatableTransform: AnimatableTransform()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.hermes.intl.IntlTextUtils: IntlTextUtils()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void quitSynchronous()
com.facebook.react.bridge.interop.InteropModuleRegistry: InteropModuleRegistry()
com.swmansion.reanimated.R$attr: R$attr()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: ReactPackageTurboModuleManagerDelegate$Builder()
com.RNFetchBlob.RNFetchBlobReq$ResponseFormat: com.RNFetchBlob.RNFetchBlobReq$ResponseFormat[] values()
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.google.android.material.button.MaterialButton: int getIconSize()
com.facebook.jni.HybridClassBase: HybridClassBase()
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String getName()
com.airbnb.lottie.LottieAnimationView: void setFailureListener(com.airbnb.lottie.LottieListener)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void createViewInstance$lambda-1(com.airbnb.lottie.LottieAnimationView,com.airbnb.lottie.LottieComposition)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetGapJNI(long,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.bumptech.glide.GlideBuilder$LogRequestOrigins: GlideBuilder$LogRequestOrigins()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.react.fabric.FabricUIManager: void initialize()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String getName()
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
kotlinx.coroutines.scheduling.Task: Task()
com.JetSetGoo.MainActivity: MainActivity()
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabledInternal(boolean)
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void removeView(android.view.View,android.view.ViewGroup)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void enableCleaningForViewTag(int)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback getFrameCallback()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.search.SearchBar: void setTitle(java.lang.CharSequence)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onHandlerUpdate(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String getName()
com.airbnb.lottie.LottieAnimationView: void setCompositionTask(com.airbnb.lottie.LottieTask)
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.facebook.jni.HybridData: HybridData()
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.airbnb.lottie.LottieAnimationView$UserActionTaken: com.airbnb.lottie.LottieAnimationView$UserActionTaken[] values()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.uimanager.ReanimatedUIManager: void dismissPopupMenu()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.fragment.app.Fragment: Fragment()
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.View,android.view.View,int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String obtainProp(int,java.lang.String)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void bringBackWindowInsets()
com.rnfs.RNFSManager: void stat(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.UIManagerListener: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(int,okhttp3.ResponseBody)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.animated.AnimationDriver: AnimationDriver()
com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager: void receiveCommand(com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void endCreatingModule()
com.google.android.material.search.SearchView: int getSoftInputMode()
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.View,int)
okhttp3.internal.platform.Platform: Platform()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.airbnb.lottie.model.CubicCurveData: CubicCurveData()
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
com.swmansion.reanimated.R$id: R$id()
androidx.lifecycle.ViewModelStore: ViewModelStore()
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.bumptech.glide.GeneratedAppGlideModuleImpl: GeneratedAppGlideModuleImpl(android.content.Context)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.animated.AnimatedNode: AnimatedNode()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.airbnb.lottie.LottieAnimationView: void setImageAssetDelegate(com.airbnb.lottie.ImageAssetDelegate)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: ImagePerfState()
com.bumptech.glide.request.BaseRequestOptions: BaseRequestOptions()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: AnimationFrameCallback(com.facebook.jni.HybridData)
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.devsupport.DevSettingsActivity: DevSettingsActivity()
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: void doFrame(long)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(android.view.View,long)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toTargetMap()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
com.facebook.jni.CppSystemErrorException: int getErrorCode()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.google.android.material.shape.RoundedCornerTreatment: RoundedCornerTreatment()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.dylanvann.fastimage.FastImageViewManager: void onAfterUpdateTransaction(com.dylanvann.fastimage.FastImageViewWithUrl)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.rnfs.RNFSManager: void moveFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: void run(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnchorMode()
androidx.core.app.ComponentActivity: ComponentActivity()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
kotlinx.coroutines.internal.CtorCache: CtorCache()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token[] values()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] values()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void publicDropView(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.facebook.jni.HybridData: boolean isValid()
com.rnfs.RNFSManager: void downloadFile(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unregisterSensor(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void checkDuplicateSharedTag(int,int)
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.google.android.material.search.SearchView: java.lang.CharSequence getSearchPrefixText()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: LayoutAnimations(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.Cookie$Companion: Cookie$Companion()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.rnfs.RNFSManager: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void resetPerfStats()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void requestRender(com.swmansion.reanimated.nativeProxy.AnimationFrameCallback)
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext getContext()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling(int)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode()
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
com.rnfs.RNFSManager: void appendFile(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.facebook.react.bridge.ReactBridge: ReactBridge()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.modules.intent.IntentModule: void waitForActivityAndGetInitialURL(com.facebook.react.bridge.Promise)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String getName()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.airbnb.lottie.LottieAnimationView: boolean getClipToCompositionBounds()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.airbnb.lottie.utils.LottieTrace: LottieTrace()
kotlinx.coroutines.CancelHandler: CancelHandler()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: ReactScrollViewAccessibilityDelegate()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: NodesManager$NativeUpdateOperation(com.swmansion.reanimated.NodesManager,int,com.facebook.react.bridge.WritableMap)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String getName()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedTransition(java.util.List,int)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.rnfs.RNFSManager: java.util.Map getConstants()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.fabric.SurfaceHandler)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$200(com.rnfs.RNFSManager)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel()
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.facebook.react.devsupport.HMRClient: void disable()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType[] values()
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.swmansion.reanimated.NativeMethodsHelper: NativeMethodsHelper()
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void printSubTree(android.view.View,int)
com.swmansion.reanimated.NativeMethodsHelper: float[] measure(android.view.View)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String,int)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.swmansion.reanimated.NodesManager: void performOperations()
okhttp3.Headers$Companion: Headers$Companion()
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
okhttp3.Request$Builder: Request$Builder()
com.swmansion.reanimated.R$interpolator: R$interpolator()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.rnfs.RNFSManager: void mkdir(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.airbnb.lottie.LottieAnimationView: long getDuration()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.airbnb.lottie.FontAssetDelegate: FontAssetDelegate()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CacheControl$Companion: CacheControl$Companion()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.airbnb.lottie.LottieAnimationView: java.lang.String getImageAssetsFolder()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.swmansion.reanimated.sensor.ReanimatedSensor: void cancel()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
com.facebook.common.references.OOMSoftReference: OOMSoftReference()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObjectString(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.LazyReactPackage: LazyReactPackage()
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: float getIconStartPadding()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.fabric.SurfaceHandler,android.view.View)
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.airbnb.lottie.AsyncUpdates: com.airbnb.lottie.AsyncUpdates valueOf(java.lang.String)
com.facebook.react.fabric.Binding: Binding()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.google.android.material.chip.Chip: void setMinLines(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.google.android.material.search.SearchBar: int getStrokeColor()
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.search.SearchView: void setUpStatusBarSpacer(int)
com.dylanvann.fastimage.FastImageViewManager: void onProgress(java.lang.String,long,long)
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.RNFetchBlob.RNFetchBlob: void slice(java.lang.String,java.lang.String,int,int,com.facebook.react.bridge.Promise)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.airbnb.lottie.LottieAnimationView$UserActionTaken: com.airbnb.lottie.LottieAnimationView$UserActionTaken valueOf(java.lang.String)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: HardwareConfigState()
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.animated.NativeAnimatedModule)
com.google.android.material.internal.FlowLayout: int getRowCount()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory: GlideBuilder$WaitForFramesAfterTrimMemory()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: ReanimatedKeyboardEventListener$KeyboardState(java.lang.String,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.rnfs.RNFSManager: void read(java.lang.String,int,int,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.soloader.SoSource: SoSource()
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.constraintlayout.widget.Barrier: int getType()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void toggleSlowAnimations()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.Binding: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String getName()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(java.lang.String,int,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.NodesManager: void onAnimationFrame(long)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
com.facebook.imagepipeline.memory.BitmapCounterProvider: BitmapCounterProvider()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory: OkHttpUrlLoader$Factory()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType: com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType[] values()
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.search.SearchBar: android.view.View getCenterView()
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.swmansion.reanimated.Utils: float convertToFloat(java.lang.Object)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentAnimationDuration()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.appcompat.widget.SwitchCompat$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void registerEventHandler(com.swmansion.reanimated.nativeProxy.EventHandler)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.swmansion.gesturehandler.core.NativeViewGestureHandler: NativeViewGestureHandler()
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.airbnb.lottie.LottieAnimationView: void setRepeatCount(int)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
com.RNFetchBlob.RNFetchBlob: void fetchBlobForm(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.airbnb.lottie.LottieAnimationView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.cardview.widget.CardView: float getCardElevation()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.reanimated.AndroidUIScheduler$1: void run()
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.bridge.Arguments$1: int size()
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
com.facebook.react.fabric.interop.InteropEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setRenderMode(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dismissPopupMenu()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.RNFetchBlob.RNFetchBlob: void mkdir(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.RNFetchBlob.RNFetchBlob: void createFile(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.common.futures.SimpleSettableFuture: SimpleSettableFuture()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.lottie.LottieAnimationView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.ReactInstanceManagerBuilder: ReactInstanceManagerBuilder()
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.transition.TransitionSet: TransitionSet()
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObject(org.json.JSONObject)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.google.android.material.search.SearchView: void setVisible(boolean)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.swmansion.reanimated.sensor.ReanimatedSensorType: int getType()
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.rnfs.RNFSManager: void rejectFileNotFound(com.facebook.react.bridge.Promise,java.lang.String)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.google.android.material.search.SearchView: androidx.appcompat.widget.Toolbar getToolbar()
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.swmansion.reanimated.ReanimatedUIManagerFactory: com.facebook.react.uimanager.UIManagerModule create(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
androidx.constraintlayout.solver.ArrayRow: ArrayRow()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.facebook.react.modules.devloading.DevLoadingModule: DevLoadingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceJson(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.react.bridge.ReactContext: void onHostPause()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: GroupedLinkedMap$LinkedEntry()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.facebook.imagepipeline.image.CloseableBitmap: CloseableBitmap()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void viewDidLayout(android.view.View)
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
com.swmansion.reanimated.layoutReanimation.Snapshot: void addTargetConfig(java.util.HashMap)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.airbnb.lottie.LottieAnimationView: void setIgnoreDisabledSystemAnimations(boolean)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.airbnb.lottie.LottieAnimationView: void setMinFrame(java.lang.String)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setHardwareAccelerationAndroid(com.airbnb.lottie.LottieAnimationView,java.lang.Boolean)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.reanimated.ReanimatedModule$1: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.google.android.material.search.SearchView: void setElevation(float)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.google.android.material.search.SearchView: void setUpHeaderLayout(int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.NodesManager: void enqueueUpdateViewOnNativeThread(int,com.facebook.react.bridge.WritableMap,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: void ensureKeysAreImported()
com.reactnativecommunity.blurview.BlurViewManager: eightbitlab.com.blurview.BlurView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.facebook.imageutils.TiffUtil: TiffUtil()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.swmansion.reanimated.NodesManager: float[] measure(int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.airbnb.lottie.LottieAnimationView: boolean getMaintainOriginalImageBounds()
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.bumptech.glide.load.resource.UnitTransformation: UnitTransformation()
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.rnfs.RNFSManager: void pathForBundle(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.RNFetchBlob.RNFetchBlobReq$ResponseType: com.RNFetchBlob.RNFetchBlobReq$ResponseType valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.RNFetchBlob.RNFetchBlob: void ls(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String getName()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.swmansion.reanimated.ReanimatedPackage: ReanimatedPackage()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragmentWrapper getFragmentWrapper()
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: void setModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: void setConsolePatchSettings(java.lang.String)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int registerSensor(com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void screenDidLayout()
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.TurboReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String getReanimatedJavaVersion()
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleProvider: java.lang.Object getModule(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: void onAnimationFrame(double)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String,java.lang.Object)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onCatalystInstanceDestroy()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String getName()
com.swmansion.reanimated.NodesManager: java.lang.String obtainProp(int,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.rnfs.Downloader: Downloader()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.bridge.CatalystInstanceImpl: void warnOnLegacyNativeModuleSystemUse()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.airbnb.lottie.LottieAnimationView: void setMinProgress(float)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onCatalystInstanceDestroy()
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.text.ReactUnderlineSpan: ReactUnderlineSpan()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer()
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: BackgroundExecutor$NamedThreadFactory(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getOrCreateModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder,boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.rnfs.RNFSManager: void reject(com.facebook.react.bridge.Promise,java.lang.String,java.lang.Exception)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructManageChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec: java.lang.String getConsolePatchSettings()
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableMap copyReadableMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.google.android.material.search.SearchView: void setAutoShowKeyboard(boolean)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.emoji2.text.MetadataRepo$Node: MetadataRepo$Node()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
androidx.recyclerview.widget.GapWorker: GapWorker()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.rnfs.RNFSManager: void uploadFiles(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.bridge.NativeModule: java.lang.String getName()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setResizeMode(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap getPayload()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode[] values()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void cancelAnimation(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.RNFetchBlob.RNFetchBlob: void getSDCardApplicationDir(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState[] values()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
okhttp3.CacheControl$Builder: CacheControl$Builder()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.rnfs.RNFSManager: void readFileRes(java.lang.String,com.facebook.react.bridge.Promise)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String getName()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String getName()
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void clearAllSharedConfigsForView(android.view.View)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.views.scroll.ReactScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: float[] measure(int)
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableArray copyReadableArray(com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,int)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.rnfs.RNFSManager: void readDirAssets(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.emoji2.text.flatbuffer.MetadataItem: MetadataItem()
com.RNFetchBlob.RNFetchBlob: void mv(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.RNFetchBlob.RNFetchBlob: void lstat(java.lang.String,com.facebook.react.bridge.Callback)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.google.android.material.datepicker.OnSelectionChangedListener: OnSelectionChangedListener()
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void updateKeyboard(int)
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.google.android.material.search.SearchView: android.text.Editable getText()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.swmansion.reanimated.ReanimatedPackage$1: ReanimatedPackage$1(com.swmansion.reanimated.ReanimatedPackage,java.util.Map)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ThemedReactContext getReactContextForView(int)
kotlinx.coroutines.EventLoop: EventLoop()
com.google.android.material.search.SearchView: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean tryStartSharedTransitionForViews(java.util.List,boolean)
com.facebook.react.bridge.DynamicFromArray: void recycle()
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.swmansion.reanimated.R$color: R$color()
com.google.android.material.search.SearchView: android.widget.TextView getSearchPrefix()
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: java.lang.String getName()
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: void destroy()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTreeForTags(int[],com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor(java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: void scrollTo(android.view.View,double,double,boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceName(com.airbnb.lottie.LottieAnimationView,java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: SharedTransitionManager$ConfigCleanerTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.facebook.react.turbomodule.core.TurboModuleManager$2: java.lang.Object getModule(java.lang.String)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void orderByAnimationTypes(java.util.List)
com.google.android.material.search.SearchView: void setModalForAccessibility(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.airbnb.lottie.LottieAnimationView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin[] values()
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.fabric.interop.InteropEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.swmansion.reanimated.NodesManager: NodesManager(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.swmansion.reanimated.ReanimatedMessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: AbstractDraweeController$InternalForwardingListener()
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
com.swmansion.reanimated.NativeProxy$1: boolean isLayoutAnimationEnabled()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutNewView(android.view.View)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setLoop(com.airbnb.lottie.LottieAnimationView,boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.react.views.modal.ModalHostShadowNode: ModalHostShadowNode()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.lugg.RNCConfig.RNCConfigModule: RNCConfigModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void checkCppVersion()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
com.facebook.react.bridge.ReactBridge: void staticInit()
com.airbnb.lottie.LottieAnimationView: void setAnimationFromUrl(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.swmansion.gesturehandler.core.HoverGestureHandler: HoverGestureHandler()
com.dylanvann.fastimage.FastImageViewManager: boolean isValidContextForGlide(android.content.Context)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.swmansion.reanimated.NativeProxy: NativeProxy(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.swmansion.reanimated.NodesManager: void updateProps(int,java.util.Map)
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType valueOf(java.lang.String)
com.facebook.react.bridge.JSIModule: void initialize()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.modules.intent.IntentModule: void invalidate()
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: ReanimatedKeyboardEventListener(java.lang.ref.WeakReference)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.facebook.yoga.YogaNode: YogaNode()
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.reactnativecommunity.blurview.BlurViewManager: void setColor(eightbitlab.com.blurview.BlurView,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.airbnb.lottie.LottieAnimationView: int getRepeatMode()
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.NodesManager$2: void doFrameGuarded(long)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.airbnb.lottie.LottieAnimationView: void setProgress(float)
com.facebook.react.defaults.DefaultComponentsRegistry$Companion: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.views.text.ReactVirtualTextShadowNode: ReactVirtualTextShadowNode()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(com.th3rdwave.safeareacontext.SafeAreaViewEdges)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.google.android.material.search.SearchView: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.airbnb.lottie.LottieAnimationView: void setComposition(com.airbnb.lottie.LottieComposition)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void makeSnapshotOfTopScreenViews(android.view.ViewGroup)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void reparentSharedViewsForCurrentTransition(java.util.List)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.facebook.react.ReactInstancePackage: ReactInstancePackage()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer()
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType[] values()
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String getName()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.View)
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager: void configureProps(java.util.Set,java.util.Set)
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findScreen(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.swmansion.reanimated.AndroidUIScheduler$2: AndroidUIScheduler$2(com.swmansion.reanimated.AndroidUIScheduler,com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceURL(com.airbnb.lottie.LottieAnimationView,java.lang.String)
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: SharedTransitionManager(com.swmansion.reanimated.layoutReanimation.AnimationsManager)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: void setCheckableResource(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.airbnb.lottie.LottieAnimationView: int getRepeatCount()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
androidx.core.view.WindowInsetsAnimationCompat$Callback: int getDispatchMode()
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.google.android.material.search.SearchBar: void setCenterView(android.view.View)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.facebook.react.bridge.ReadableArray: int getInt(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.dylanvann.fastimage.FastImageViewManager: FastImageViewManager()
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.facebook.soloader.SysUtil$Api14Utils: SysUtil$Api14Utils()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.airbnb.lottie.model.content.LBlendMode: com.airbnb.lottie.model.content.LBlendMode[] values()
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.facebook.react.TurboReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.GuardedRunnable: void run()
com.google.android.material.search.SearchView: android.view.Window getActivityWindow()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.ReactRootView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.airbnb.lottie.LottieAnimationView: float getMaxFrame()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.google.android.material.ripple.RippleUtils: RippleUtils()
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.google.android.material.shape.CutCornerTreatment: CutCornerTreatment()
androidx.constraintlayout.widget.ConstraintSet$Constraint: ConstraintSet$Constraint()
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.airbnb.lottie.LottieAnimationView: void setMinAndMaxFrame(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
com.facebook.common.internal.Closeables: Closeables()
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.swmansion.reanimated.R$bool: R$bool()
com.swmansion.reanimated.ReanimatedModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.AndroidUIScheduler,com.swmansion.reanimated.layoutReanimation.LayoutAnimations,com.facebook.react.bridge.queue.MessageQueueThread)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper()
com.google.android.material.chip.Chip: float getChipStartPadding()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String getName()
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.google.android.material.search.SearchView: void setHint(java.lang.CharSequence)
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.android.react.lottie.LottieAnimationViewPropertyManager getOrCreatePropertyManager(com.airbnb.lottie.LottieAnimationView)
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.google.android.material.button.MaterialButton: int getIconGravity()
com.facebook.react.uimanager.ViewManager: ViewManager()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.ReactRootView: int getRootViewTag()
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.google.android.material.chip.Chip: void setGravity(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setGestureState(int,int)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.dylanvann.fastimage.FastImageViewModule: void clearMemoryCache(com.facebook.react.bridge.Promise)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedAnimationForView(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot,int)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: ResourceDrawableIdHelper()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension[] values()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.facebook.react.bridge.DimensionPropConverter: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.swmansion.reanimated.R$string: R$string()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List getSharedElementsForCurrentTransition(java.util.List,boolean)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.Set getPendingDeletionsForTag(int)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean arrayContains(int[],int)
com.RNFetchBlob.RNFetchBlobReq$ResponseType: com.RNFetchBlob.RNFetchBlobReq$ResponseType[] values()
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$300(com.rnfs.RNFSManager)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.swmansion.reanimated.ReanimatedMessageQueueThread: ReanimatedMessageQueueThread()
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
com.swmansion.reanimated.NativeProxy$1: boolean shouldAnimateExiting(int,boolean)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
com.facebook.imagepipeline.cache.StagingArea: StagingArea()
com.swmansion.gesturehandler.core.RotationGestureHandler: RotationGestureHandler()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void dropView(android.view.View)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.google.android.material.search.SearchView: void setText(java.lang.CharSequence)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.bumptech.glide.load.Options: Options()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void sortViewsByTags(java.util.List)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void lambda$manageChildren$0(java.util.ArrayList,android.view.View,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.google.android.material.search.SearchView: void setUpBackgroundViewElevationOverlay(float)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void clearAnimationConfigRecursive(android.view.View)
com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule: DevToolsSettingsManagerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.swmansion.reanimated.R$drawable: R$drawable()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.dialog.DialogModule)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: android.view.View getRootView()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.View,android.view.View,int)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setMIsHidden(boolean)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor: void run(android.view.View)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String getName()
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.swmansion.reanimated.NodesManager: void stopUpdatingOnAnimationFrame()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(float)
com.RNFetchBlob.RNFetchBlob: void addCompleteDownload(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.google.android.material.card.MaterialCardView: int getCheckedIconGravity()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void endLayoutAnimation(int,boolean)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$000(com.rnfs.RNFSManager)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
com.google.android.material.datepicker.DayViewDecorator: DayViewDecorator()
com.airbnb.lottie.LottieComposition: LottieComposition()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.ReactActivity: ReactActivity()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.swmansion.reanimated.ReanimatedModule: void installTurboModule()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.airbnb.lottie.LottieAnimationView: void setAnimationFromJson(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.dylanvann.fastimage.FastImageViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.swmansion.reanimated.AndroidUIScheduler: void triggerUI()
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: void maybeLoadSoLibrary()
com.facebook.react.modules.fresco.FrescoModule: void initialize()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.views.text.ReactFontManager$AssetFontFamily: ReactFontManager$AssetFontFamily()
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.google.android.material.search.SearchView: void setAnimatedNavigationIcon(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
